// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v4.25.0
// source: structs.proto

package cli

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Game struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Contest     string `protobuf:"bytes,1,opt,name=Contest,proto3" json:"Contest,omitempty"`
	ContestType string `protobuf:"bytes,2,opt,name=ContestType,proto3" json:"ContestType,omitempty"`
	RoomID      int64  `protobuf:"varint,3,opt,name=RoomID,proto3" json:"RoomID,omitempty"`
	RoomType    string `protobuf:"bytes,4,opt,name=RoomType,proto3" json:"RoomType,omitempty"`
	RoundID     int64  `protobuf:"varint,5,opt,name=RoundID,proto3" json:"RoundID,omitempty"`
}

func (x *Game) Reset() {
	*x = Game{}
	if protoimpl.UnsafeEnabled {
		mi := &file_structs_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Game) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Game) ProtoMessage() {}

func (x *Game) ProtoReflect() protoreflect.Message {
	mi := &file_structs_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Game.ProtoReflect.Descriptor instead.
func (*Game) Descriptor() ([]byte, []int) {
	return file_structs_proto_rawDescGZIP(), []int{0}
}

func (x *Game) GetContest() string {
	if x != nil {
		return x.Contest
	}
	return ""
}

func (x *Game) GetContestType() string {
	if x != nil {
		return x.ContestType
	}
	return ""
}

func (x *Game) GetRoomID() int64 {
	if x != nil {
		return x.RoomID
	}
	return 0
}

func (x *Game) GetRoomType() string {
	if x != nil {
		return x.RoomType
	}
	return ""
}

func (x *Game) GetRoundID() int64 {
	if x != nil {
		return x.RoundID
	}
	return 0
}

type Srv struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Runtime        string `protobuf:"bytes,1,opt,name=Runtime,proto3" json:"Runtime,omitempty"`
	Version        string `protobuf:"bytes,2,opt,name=Version,proto3" json:"Version,omitempty"`
	SessionVersion string `protobuf:"bytes,3,opt,name=SessionVersion,proto3" json:"SessionVersion,omitempty"`
	SessionBranch  uint32 `protobuf:"varint,4,opt,name=SessionBranch,proto3" json:"SessionBranch,omitempty"`
}

func (x *Srv) Reset() {
	*x = Srv{}
	if protoimpl.UnsafeEnabled {
		mi := &file_structs_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Srv) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Srv) ProtoMessage() {}

func (x *Srv) ProtoReflect() protoreflect.Message {
	mi := &file_structs_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Srv.ProtoReflect.Descriptor instead.
func (*Srv) Descriptor() ([]byte, []int) {
	return file_structs_proto_rawDescGZIP(), []int{1}
}

func (x *Srv) GetRuntime() string {
	if x != nil {
		return x.Runtime
	}
	return ""
}

func (x *Srv) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *Srv) GetSessionVersion() string {
	if x != nil {
		return x.SessionVersion
	}
	return ""
}

func (x *Srv) GetSessionBranch() uint32 {
	if x != nil {
		return x.SessionBranch
	}
	return 0
}

type Proc struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PublicGate string `protobuf:"bytes,1,opt,name=PublicGate,proto3" json:"PublicGate,omitempty"`
	CommitID   string `protobuf:"bytes,3,opt,name=CommitID,proto3" json:"CommitID,omitempty"`
	BuildTime  string `protobuf:"bytes,2,opt,name=BuildTime,proto3" json:"BuildTime,omitempty"`
	BootTime   string `protobuf:"bytes,4,opt,name=BootTime,proto3" json:"BootTime,omitempty"`
}

func (x *Proc) Reset() {
	*x = Proc{}
	if protoimpl.UnsafeEnabled {
		mi := &file_structs_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Proc) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Proc) ProtoMessage() {}

func (x *Proc) ProtoReflect() protoreflect.Message {
	mi := &file_structs_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Proc.ProtoReflect.Descriptor instead.
func (*Proc) Descriptor() ([]byte, []int) {
	return file_structs_proto_rawDescGZIP(), []int{2}
}

func (x *Proc) GetPublicGate() string {
	if x != nil {
		return x.PublicGate
	}
	return ""
}

func (x *Proc) GetCommitID() string {
	if x != nil {
		return x.CommitID
	}
	return ""
}

func (x *Proc) GetBuildTime() string {
	if x != nil {
		return x.BuildTime
	}
	return ""
}

func (x *Proc) GetBootTime() string {
	if x != nil {
		return x.BootTime
	}
	return ""
}

type Identifier struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContextType string `protobuf:"bytes,1,opt,name=ContextType,proto3" json:"ContextType,omitempty"`
	LogType     string `protobuf:"bytes,2,opt,name=LogType,proto3" json:"LogType,omitempty"`
	GroupID     string `protobuf:"bytes,3,opt,name=GroupID,proto3" json:"GroupID,omitempty"`
	BatchID     string `protobuf:"bytes,4,opt,name=BatchID,proto3" json:"BatchID,omitempty"`
	SeqID       int64  `protobuf:"varint,5,opt,name=SeqID,proto3" json:"SeqID,omitempty"`
	LogID       string `protobuf:"bytes,6,opt,name=LogID,proto3" json:"LogID,omitempty"`
	ProcessID   string `protobuf:"bytes,7,opt,name=ProcessID,proto3" json:"ProcessID,omitempty"`
}

func (x *Identifier) Reset() {
	*x = Identifier{}
	if protoimpl.UnsafeEnabled {
		mi := &file_structs_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Identifier) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Identifier) ProtoMessage() {}

func (x *Identifier) ProtoReflect() protoreflect.Message {
	mi := &file_structs_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Identifier.ProtoReflect.Descriptor instead.
func (*Identifier) Descriptor() ([]byte, []int) {
	return file_structs_proto_rawDescGZIP(), []int{3}
}

func (x *Identifier) GetContextType() string {
	if x != nil {
		return x.ContextType
	}
	return ""
}

func (x *Identifier) GetLogType() string {
	if x != nil {
		return x.LogType
	}
	return ""
}

func (x *Identifier) GetGroupID() string {
	if x != nil {
		return x.GroupID
	}
	return ""
}

func (x *Identifier) GetBatchID() string {
	if x != nil {
		return x.BatchID
	}
	return ""
}

func (x *Identifier) GetSeqID() int64 {
	if x != nil {
		return x.SeqID
	}
	return 0
}

func (x *Identifier) GetLogID() string {
	if x != nil {
		return x.LogID
	}
	return ""
}

func (x *Identifier) GetProcessID() string {
	if x != nil {
		return x.ProcessID
	}
	return ""
}

type Cli struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Package          string `protobuf:"bytes,1,opt,name=Package,proto3" json:"Package,omitempty"`                    // 包名 com.xxx.bbb
	AppVersion       string `protobuf:"bytes,2,opt,name=AppVersion,proto3" json:"AppVersion,omitempty"`              // 版本号 1.0.0
	ResVersion       string `protobuf:"bytes,3,opt,name=ResVersion,proto3" json:"ResVersion,omitempty"`              // 资源版本号 1.0.0
	Platform         string `protobuf:"bytes,4,opt,name=Platform,proto3" json:"Platform,omitempty"`                  // 平台 严格字符串 IOS | Android
	OpratorVersion   string `protobuf:"bytes,5,opt,name=OpratorVersion,proto3" json:"OpratorVersion,omitempty"`      // iOS 18.10.1
	Device           string `protobuf:"bytes,6,opt,name=Device,proto3" json:"Device,omitempty"`                      // xiaomi1.2.3
	DeviceID         string `protobuf:"bytes,7,opt,name=DeviceID,proto3" json:"DeviceID,omitempty"`                  // Unity Identifier
	Model            string `protobuf:"bytes,8,opt,name=Model,proto3" json:"Model,omitempty"`                        // 设备制造商
	Mac              string `protobuf:"bytes,9,opt,name=Mac,proto3" json:"Mac,omitempty"`                            // Mac地址
	ZoneOffset       string `protobuf:"bytes,10,opt,name=ZoneOffset,proto3" json:"ZoneOffset,omitempty"`             // +9/-4
	IntranetIP       string `protobuf:"bytes,11,opt,name=IntranetIP,proto3" json:"IntranetIP,omitempty"`             // 内网IP
	InternetIP       string `protobuf:"bytes,12,opt,name=InternetIP,proto3" json:"InternetIP,omitempty"`             // 公网IP
	Continent        string `protobuf:"bytes,13,opt,name=Continent,proto3" json:"Continent,omitempty"`               // 版本服务器取
	Country          string `protobuf:"bytes,14,opt,name=Country,proto3" json:"Country,omitempty"`                   // 版本服务器取
	ASN              string `protobuf:"bytes,15,opt,name=ASN,proto3" json:"ASN,omitempty"`                           // 版本服务器取
	Channel          string `protobuf:"bytes,16,opt,name=Channel,proto3" json:"Channel,omitempty"`                   // 推广渠道
	Background       bool   `protobuf:"varint,17,opt,name=Background,proto3" json:"Background,omitempty"`            // 后台运行
	Simulator        bool   `protobuf:"varint,18,opt,name=Simulator,proto3" json:"Simulator,omitempty"`              // 模拟器
	Language         string `protobuf:"bytes,19,opt,name=Language,proto3" json:"Language,omitempty"`                 // 语言
	Network          string `protobuf:"bytes,20,opt,name=Network,proto3" json:"Network,omitempty"`                   // 网络类型 2G|3G|4G|WIFI|UNKNOWN
	NetworkPromotion string `protobuf:"bytes,21,opt,name=NetworkPromotion,proto3" json:"NetworkPromotion,omitempty"` // 用户来源
	AccountType      string `protobuf:"bytes,22,opt,name=AccountType,proto3" json:"AccountType,omitempty"`           // 账号类型
	LoginType        string `protobuf:"bytes,23,opt,name=LoginType,proto3" json:"LoginType,omitempty"`               // 授权类型
	Agent            string `protobuf:"bytes,24,opt,name=Agent,proto3" json:"Agent,omitempty"`                       // 推广代理
}

func (x *Cli) Reset() {
	*x = Cli{}
	if protoimpl.UnsafeEnabled {
		mi := &file_structs_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cli) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cli) ProtoMessage() {}

func (x *Cli) ProtoReflect() protoreflect.Message {
	mi := &file_structs_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cli.ProtoReflect.Descriptor instead.
func (*Cli) Descriptor() ([]byte, []int) {
	return file_structs_proto_rawDescGZIP(), []int{4}
}

func (x *Cli) GetPackage() string {
	if x != nil {
		return x.Package
	}
	return ""
}

func (x *Cli) GetAppVersion() string {
	if x != nil {
		return x.AppVersion
	}
	return ""
}

func (x *Cli) GetResVersion() string {
	if x != nil {
		return x.ResVersion
	}
	return ""
}

func (x *Cli) GetPlatform() string {
	if x != nil {
		return x.Platform
	}
	return ""
}

func (x *Cli) GetOpratorVersion() string {
	if x != nil {
		return x.OpratorVersion
	}
	return ""
}

func (x *Cli) GetDevice() string {
	if x != nil {
		return x.Device
	}
	return ""
}

func (x *Cli) GetDeviceID() string {
	if x != nil {
		return x.DeviceID
	}
	return ""
}

func (x *Cli) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

func (x *Cli) GetMac() string {
	if x != nil {
		return x.Mac
	}
	return ""
}

func (x *Cli) GetZoneOffset() string {
	if x != nil {
		return x.ZoneOffset
	}
	return ""
}

func (x *Cli) GetIntranetIP() string {
	if x != nil {
		return x.IntranetIP
	}
	return ""
}

func (x *Cli) GetInternetIP() string {
	if x != nil {
		return x.InternetIP
	}
	return ""
}

func (x *Cli) GetContinent() string {
	if x != nil {
		return x.Continent
	}
	return ""
}

func (x *Cli) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *Cli) GetASN() string {
	if x != nil {
		return x.ASN
	}
	return ""
}

func (x *Cli) GetChannel() string {
	if x != nil {
		return x.Channel
	}
	return ""
}

func (x *Cli) GetBackground() bool {
	if x != nil {
		return x.Background
	}
	return false
}

func (x *Cli) GetSimulator() bool {
	if x != nil {
		return x.Simulator
	}
	return false
}

func (x *Cli) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *Cli) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *Cli) GetNetworkPromotion() string {
	if x != nil {
		return x.NetworkPromotion
	}
	return ""
}

func (x *Cli) GetAccountType() string {
	if x != nil {
		return x.AccountType
	}
	return ""
}

func (x *Cli) GetLoginType() string {
	if x != nil {
		return x.LoginType
	}
	return ""
}

func (x *Cli) GetAgent() string {
	if x != nil {
		return x.Agent
	}
	return ""
}

type Acc struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Package  string `protobuf:"bytes,1,opt,name=Package,proto3" json:"Package,omitempty"`
	Device   string `protobuf:"bytes,2,opt,name=Device,proto3" json:"Device,omitempty"`
	Facebook string `protobuf:"bytes,3,opt,name=Facebook,proto3" json:"Facebook,omitempty"`
	Google   string `protobuf:"bytes,4,opt,name=Google,proto3" json:"Google,omitempty"`
}

func (x *Acc) Reset() {
	*x = Acc{}
	if protoimpl.UnsafeEnabled {
		mi := &file_structs_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Acc) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Acc) ProtoMessage() {}

func (x *Acc) ProtoReflect() protoreflect.Message {
	mi := &file_structs_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Acc.ProtoReflect.Descriptor instead.
func (*Acc) Descriptor() ([]byte, []int) {
	return file_structs_proto_rawDescGZIP(), []int{5}
}

func (x *Acc) GetPackage() string {
	if x != nil {
		return x.Package
	}
	return ""
}

func (x *Acc) GetDevice() string {
	if x != nil {
		return x.Device
	}
	return ""
}

func (x *Acc) GetFacebook() string {
	if x != nil {
		return x.Facebook
	}
	return ""
}

func (x *Acc) GetGoogle() string {
	if x != nil {
		return x.Google
	}
	return ""
}

type User struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nickname string `protobuf:"bytes,1,opt,name=Nickname,proto3" json:"Nickname,omitempty"`
	Avatar   int64  `protobuf:"varint,2,opt,name=Avatar,proto3" json:"Avatar,omitempty"`
}

func (x *User) Reset() {
	*x = User{}
	if protoimpl.UnsafeEnabled {
		mi := &file_structs_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_structs_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_structs_proto_rawDescGZIP(), []int{6}
}

func (x *User) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *User) GetAvatar() int64 {
	if x != nil {
		return x.Avatar
	}
	return 0
}

type Char struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreateTime          int64  `protobuf:"varint,1,opt,name=CreateTime,proto3" json:"CreateTime,omitempty"`
	LoginTime           int64  `protobuf:"varint,2,opt,name=LoginTime,proto3" json:"LoginTime,omitempty"`
	LastLoginTime       int64  `protobuf:"varint,3,opt,name=LastLoginTime,proto3" json:"LastLoginTime,omitempty"`
	NetworkPromotion    string `protobuf:"bytes,4,opt,name=NetworkPromotion,proto3" json:"NetworkPromotion,omitempty"`
	TagHub              string `protobuf:"bytes,5,opt,name=TagHub,proto3" json:"TagHub,omitempty"`
	ActiveDays          int64  `protobuf:"varint,6,opt,name=ActiveDays,proto3" json:"ActiveDays,omitempty"`
	FirstRechargeTime   int64  `protobuf:"varint,7,opt,name=FirstRechargeTime,proto3" json:"FirstRechargeTime,omitempty"`
	LatestRechargeTime  int64  `protobuf:"varint,8,opt,name=LatestRechargeTime,proto3" json:"LatestRechargeTime,omitempty"`
	RechargeTimes       int64  `protobuf:"varint,9,opt,name=RechargeTimes,proto3" json:"RechargeTimes,omitempty"`
	RechargeCurrency    int64  `protobuf:"varint,10,opt,name=RechargeCurrency,proto3" json:"RechargeCurrency,omitempty"`
	FirstWithdrawTime   int64  `protobuf:"varint,11,opt,name=FirstWithdrawTime,proto3" json:"FirstWithdrawTime,omitempty"`
	LatestWithdrawTime  int64  `protobuf:"varint,12,opt,name=LatestWithdrawTime,proto3" json:"LatestWithdrawTime,omitempty"`
	WithdrawTimes       int64  `protobuf:"varint,13,opt,name=WithdrawTimes,proto3" json:"WithdrawTimes,omitempty"`
	HasRelativeBankrupt bool   `protobuf:"varint,14,opt,name=HasRelativeBankrupt,proto3" json:"HasRelativeBankrupt,omitempty"`
	Channel             string `protobuf:"bytes,15,opt,name=Channel,proto3" json:"Channel,omitempty"`
	AgentID             string `protobuf:"bytes,16,opt,name=AgentID,proto3" json:"AgentID,omitempty"`
}

func (x *Char) Reset() {
	*x = Char{}
	if protoimpl.UnsafeEnabled {
		mi := &file_structs_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Char) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Char) ProtoMessage() {}

func (x *Char) ProtoReflect() protoreflect.Message {
	mi := &file_structs_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Char.ProtoReflect.Descriptor instead.
func (*Char) Descriptor() ([]byte, []int) {
	return file_structs_proto_rawDescGZIP(), []int{7}
}

func (x *Char) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *Char) GetLoginTime() int64 {
	if x != nil {
		return x.LoginTime
	}
	return 0
}

func (x *Char) GetLastLoginTime() int64 {
	if x != nil {
		return x.LastLoginTime
	}
	return 0
}

func (x *Char) GetNetworkPromotion() string {
	if x != nil {
		return x.NetworkPromotion
	}
	return ""
}

func (x *Char) GetTagHub() string {
	if x != nil {
		return x.TagHub
	}
	return ""
}

func (x *Char) GetActiveDays() int64 {
	if x != nil {
		return x.ActiveDays
	}
	return 0
}

func (x *Char) GetFirstRechargeTime() int64 {
	if x != nil {
		return x.FirstRechargeTime
	}
	return 0
}

func (x *Char) GetLatestRechargeTime() int64 {
	if x != nil {
		return x.LatestRechargeTime
	}
	return 0
}

func (x *Char) GetRechargeTimes() int64 {
	if x != nil {
		return x.RechargeTimes
	}
	return 0
}

func (x *Char) GetRechargeCurrency() int64 {
	if x != nil {
		return x.RechargeCurrency
	}
	return 0
}

func (x *Char) GetFirstWithdrawTime() int64 {
	if x != nil {
		return x.FirstWithdrawTime
	}
	return 0
}

func (x *Char) GetLatestWithdrawTime() int64 {
	if x != nil {
		return x.LatestWithdrawTime
	}
	return 0
}

func (x *Char) GetWithdrawTimes() int64 {
	if x != nil {
		return x.WithdrawTimes
	}
	return 0
}

func (x *Char) GetHasRelativeBankrupt() bool {
	if x != nil {
		return x.HasRelativeBankrupt
	}
	return false
}

func (x *Char) GetChannel() string {
	if x != nil {
		return x.Channel
	}
	return ""
}

func (x *Char) GetAgentID() string {
	if x != nil {
		return x.AgentID
	}
	return ""
}

type Book struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FreeCoin        int64 `protobuf:"varint,1,opt,name=FreeCoin,proto3" json:"FreeCoin,omitempty"`
	FreeWinCoin     int64 `protobuf:"varint,2,opt,name=FreeWinCoin,proto3" json:"FreeWinCoin,omitempty"`
	RechargeCoin    int64 `protobuf:"varint,3,opt,name=RechargeCoin,proto3" json:"RechargeCoin,omitempty"`
	RechargeWinCoin int64 `protobuf:"varint,4,opt,name=RechargeWinCoin,proto3" json:"RechargeWinCoin,omitempty"`
}

func (x *Book) Reset() {
	*x = Book{}
	if protoimpl.UnsafeEnabled {
		mi := &file_structs_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Book) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Book) ProtoMessage() {}

func (x *Book) ProtoReflect() protoreflect.Message {
	mi := &file_structs_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Book.ProtoReflect.Descriptor instead.
func (*Book) Descriptor() ([]byte, []int) {
	return file_structs_proto_rawDescGZIP(), []int{8}
}

func (x *Book) GetFreeCoin() int64 {
	if x != nil {
		return x.FreeCoin
	}
	return 0
}

func (x *Book) GetFreeWinCoin() int64 {
	if x != nil {
		return x.FreeWinCoin
	}
	return 0
}

func (x *Book) GetRechargeCoin() int64 {
	if x != nil {
		return x.RechargeCoin
	}
	return 0
}

func (x *Book) GetRechargeWinCoin() int64 {
	if x != nil {
		return x.RechargeWinCoin
	}
	return 0
}

type Agg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IncFreeCoin             int64 `protobuf:"varint,1,opt,name=IncFreeCoin,proto3" json:"IncFreeCoin,omitempty"`
	IncFreeWinCoin          int64 `protobuf:"varint,2,opt,name=IncFreeWinCoin,proto3" json:"IncFreeWinCoin,omitempty"`
	IncRechargeCoin         int64 `protobuf:"varint,3,opt,name=IncRechargeCoin,proto3" json:"IncRechargeCoin,omitempty"`
	IncRechargeWinCoin      int64 `protobuf:"varint,4,opt,name=IncRechargeWinCoin,proto3" json:"IncRechargeWinCoin,omitempty"`
	DecFreeCoin             int64 `protobuf:"varint,5,opt,name=DecFreeCoin,proto3" json:"DecFreeCoin,omitempty"`
	DecFreeWinCoin          int64 `protobuf:"varint,6,opt,name=DecFreeWinCoin,proto3" json:"DecFreeWinCoin,omitempty"`
	DecRechargeCoin         int64 `protobuf:"varint,7,opt,name=DecRechargeCoin,proto3" json:"DecRechargeCoin,omitempty"`
	DecRechargeWinCoin      int64 `protobuf:"varint,8,opt,name=DecRechargeWinCoin,proto3" json:"DecRechargeWinCoin,omitempty"`
	WithdrawFreeCoin        int64 `protobuf:"varint,9,opt,name=WithdrawFreeCoin,proto3" json:"WithdrawFreeCoin,omitempty"`
	WithdrawRechargeCoin    int64 `protobuf:"varint,10,opt,name=WithdrawRechargeCoin,proto3" json:"WithdrawRechargeCoin,omitempty"`
	WithdrawFreeWinCoin     int64 `protobuf:"varint,11,opt,name=WithdrawFreeWinCoin,proto3" json:"WithdrawFreeWinCoin,omitempty"`
	WithdrawRechargeWinCoin int64 `protobuf:"varint,12,opt,name=WithdrawRechargeWinCoin,proto3" json:"WithdrawRechargeWinCoin,omitempty"`
}

func (x *Agg) Reset() {
	*x = Agg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_structs_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Agg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Agg) ProtoMessage() {}

func (x *Agg) ProtoReflect() protoreflect.Message {
	mi := &file_structs_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Agg.ProtoReflect.Descriptor instead.
func (*Agg) Descriptor() ([]byte, []int) {
	return file_structs_proto_rawDescGZIP(), []int{9}
}

func (x *Agg) GetIncFreeCoin() int64 {
	if x != nil {
		return x.IncFreeCoin
	}
	return 0
}

func (x *Agg) GetIncFreeWinCoin() int64 {
	if x != nil {
		return x.IncFreeWinCoin
	}
	return 0
}

func (x *Agg) GetIncRechargeCoin() int64 {
	if x != nil {
		return x.IncRechargeCoin
	}
	return 0
}

func (x *Agg) GetIncRechargeWinCoin() int64 {
	if x != nil {
		return x.IncRechargeWinCoin
	}
	return 0
}

func (x *Agg) GetDecFreeCoin() int64 {
	if x != nil {
		return x.DecFreeCoin
	}
	return 0
}

func (x *Agg) GetDecFreeWinCoin() int64 {
	if x != nil {
		return x.DecFreeWinCoin
	}
	return 0
}

func (x *Agg) GetDecRechargeCoin() int64 {
	if x != nil {
		return x.DecRechargeCoin
	}
	return 0
}

func (x *Agg) GetDecRechargeWinCoin() int64 {
	if x != nil {
		return x.DecRechargeWinCoin
	}
	return 0
}

func (x *Agg) GetWithdrawFreeCoin() int64 {
	if x != nil {
		return x.WithdrawFreeCoin
	}
	return 0
}

func (x *Agg) GetWithdrawRechargeCoin() int64 {
	if x != nil {
		return x.WithdrawRechargeCoin
	}
	return 0
}

func (x *Agg) GetWithdrawFreeWinCoin() int64 {
	if x != nil {
		return x.WithdrawFreeWinCoin
	}
	return 0
}

func (x *Agg) GetWithdrawRechargeWinCoin() int64 {
	if x != nil {
		return x.WithdrawRechargeWinCoin
	}
	return 0
}

type GameSort struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Game      string `protobuf:"bytes,1,opt,name=Game,proto3" json:"Game,omitempty"`
	GameID    int64  `protobuf:"varint,2,opt,name=GameID,proto3" json:"GameID,omitempty"`
	Sort      int64  `protobuf:"varint,3,opt,name=Sort,proto3" json:"Sort,omitempty"`
	Type      int64  `protobuf:"varint,4,opt,name=Type,proto3" json:"Type,omitempty"`
	Flag      int64  `protobuf:"varint,5,opt,name=Flag,proto3" json:"Flag,omitempty"`
	Icon      int64  `protobuf:"varint,6,opt,name=Icon,proto3" json:"Icon,omitempty"`
	Size      int64  `protobuf:"varint,7,opt,name=Size,proto3" json:"Size,omitempty"`
	Jackpot   bool   `protobuf:"varint,8,opt,name=Jackpot,proto3" json:"Jackpot,omitempty"`
	Switch    bool   `protobuf:"varint,9,opt,name=Switch,proto3" json:"Switch,omitempty"`
	EntryMin  int64  `protobuf:"varint,10,opt,name=EntryMin,proto3" json:"EntryMin,omitempty"`
	EntryMax  int64  `protobuf:"varint,11,opt,name=EntryMax,proto3" json:"EntryMax,omitempty"`
	ServiceID int64  `protobuf:"varint,12,opt,name=ServiceID,proto3" json:"ServiceID,omitempty"`
}

func (x *GameSort) Reset() {
	*x = GameSort{}
	if protoimpl.UnsafeEnabled {
		mi := &file_structs_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameSort) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameSort) ProtoMessage() {}

func (x *GameSort) ProtoReflect() protoreflect.Message {
	mi := &file_structs_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameSort.ProtoReflect.Descriptor instead.
func (*GameSort) Descriptor() ([]byte, []int) {
	return file_structs_proto_rawDescGZIP(), []int{10}
}

func (x *GameSort) GetGame() string {
	if x != nil {
		return x.Game
	}
	return ""
}

func (x *GameSort) GetGameID() int64 {
	if x != nil {
		return x.GameID
	}
	return 0
}

func (x *GameSort) GetSort() int64 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *GameSort) GetType() int64 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *GameSort) GetFlag() int64 {
	if x != nil {
		return x.Flag
	}
	return 0
}

func (x *GameSort) GetIcon() int64 {
	if x != nil {
		return x.Icon
	}
	return 0
}

func (x *GameSort) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *GameSort) GetJackpot() bool {
	if x != nil {
		return x.Jackpot
	}
	return false
}

func (x *GameSort) GetSwitch() bool {
	if x != nil {
		return x.Switch
	}
	return false
}

func (x *GameSort) GetEntryMin() int64 {
	if x != nil {
		return x.EntryMin
	}
	return 0
}

func (x *GameSort) GetEntryMax() int64 {
	if x != nil {
		return x.EntryMax
	}
	return 0
}

func (x *GameSort) GetServiceID() int64 {
	if x != nil {
		return x.ServiceID
	}
	return 0
}

type Settle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Game    string `protobuf:"bytes,1,opt,name=Game,proto3" json:"Game,omitempty"`
	WinCoin int64  `protobuf:"varint,2,opt,name=WinCoin,proto3" json:"WinCoin,omitempty"`
	Coin    int64  `protobuf:"varint,3,opt,name=Coin,proto3" json:"Coin,omitempty"`
}

func (x *Settle) Reset() {
	*x = Settle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_structs_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Settle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Settle) ProtoMessage() {}

func (x *Settle) ProtoReflect() protoreflect.Message {
	mi := &file_structs_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Settle.ProtoReflect.Descriptor instead.
func (*Settle) Descriptor() ([]byte, []int) {
	return file_structs_proto_rawDescGZIP(), []int{11}
}

func (x *Settle) GetGame() string {
	if x != nil {
		return x.Game
	}
	return ""
}

func (x *Settle) GetWinCoin() int64 {
	if x != nil {
		return x.WinCoin
	}
	return 0
}

func (x *Settle) GetCoin() int64 {
	if x != nil {
		return x.Coin
	}
	return 0
}

// AwardStatus 奖励状态
type AwardStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"Status"
	Status int64 `protobuf:"varint,1,opt,name=Status,proto3" json:"Status,omitempty"`
	// @inject_tag: json:"Count"
	Count int64 `protobuf:"varint,2,opt,name=Count,proto3" json:"Count,omitempty"`
	// @inject_tag: json:"AdCount"
	AdCount int64 `protobuf:"varint,3,opt,name=AdCount,proto3" json:"AdCount,omitempty"`
	// @inject_tag: json:"PropList"
	PropList []*Prop `protobuf:"bytes,4,rep,name=PropList,proto3" json:"PropList,omitempty"`
}

func (x *AwardStatus) Reset() {
	*x = AwardStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_structs_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AwardStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AwardStatus) ProtoMessage() {}

func (x *AwardStatus) ProtoReflect() protoreflect.Message {
	mi := &file_structs_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AwardStatus.ProtoReflect.Descriptor instead.
func (*AwardStatus) Descriptor() ([]byte, []int) {
	return file_structs_proto_rawDescGZIP(), []int{12}
}

func (x *AwardStatus) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *AwardStatus) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *AwardStatus) GetAdCount() int64 {
	if x != nil {
		return x.AdCount
	}
	return 0
}

func (x *AwardStatus) GetPropList() []*Prop {
	if x != nil {
		return x.PropList
	}
	return nil
}

// SigninAwardData 连续签到奖励状态
type SigninAwardData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"DayStatus"
	DayStatus []*AwardStatus `protobuf:"bytes,1,rep,name=DayStatus,proto3" json:"DayStatus,omitempty"` // 奖励状态
	// @inject_tag: json:"NextAwardStartTime"
	NextAwardStartTime int64 `protobuf:"varint,2,opt,name=NextAwardStartTime,proto3" json:"NextAwardStartTime,omitempty"` // 下个奖励的开始时间
	// @inject_tag: json:"ActivityEndTime"
	ActivityEndTime int64 `protobuf:"varint,3,opt,name=ActivityEndTime,proto3" json:"ActivityEndTime,omitempty"` // 活动结束时间
}

func (x *SigninAwardData) Reset() {
	*x = SigninAwardData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_structs_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SigninAwardData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SigninAwardData) ProtoMessage() {}

func (x *SigninAwardData) ProtoReflect() protoreflect.Message {
	mi := &file_structs_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SigninAwardData.ProtoReflect.Descriptor instead.
func (*SigninAwardData) Descriptor() ([]byte, []int) {
	return file_structs_proto_rawDescGZIP(), []int{13}
}

func (x *SigninAwardData) GetDayStatus() []*AwardStatus {
	if x != nil {
		return x.DayStatus
	}
	return nil
}

func (x *SigninAwardData) GetNextAwardStartTime() int64 {
	if x != nil {
		return x.NextAwardStartTime
	}
	return 0
}

func (x *SigninAwardData) GetActivityEndTime() int64 {
	if x != nil {
		return x.ActivityEndTime
	}
	return 0
}

// AddUpSigninAwardData 累计签到奖励状态
type AddUpSigninAwardData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"DayStatus"
	DayStatus []*AwardStatus `protobuf:"bytes,1,rep,name=DayStatus,proto3" json:"DayStatus,omitempty"` // 奖励状态
	// @inject_tag: json:"NextAwardStartTime"
	NextAwardStartTime int64 `protobuf:"varint,2,opt,name=NextAwardStartTime,proto3" json:"NextAwardStartTime,omitempty"` // 下个奖励的开始时间
}

func (x *AddUpSigninAwardData) Reset() {
	*x = AddUpSigninAwardData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_structs_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddUpSigninAwardData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddUpSigninAwardData) ProtoMessage() {}

func (x *AddUpSigninAwardData) ProtoReflect() protoreflect.Message {
	mi := &file_structs_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddUpSigninAwardData.ProtoReflect.Descriptor instead.
func (*AddUpSigninAwardData) Descriptor() ([]byte, []int) {
	return file_structs_proto_rawDescGZIP(), []int{14}
}

func (x *AddUpSigninAwardData) GetDayStatus() []*AwardStatus {
	if x != nil {
		return x.DayStatus
	}
	return nil
}

func (x *AddUpSigninAwardData) GetNextAwardStartTime() int64 {
	if x != nil {
		return x.NextAwardStartTime
	}
	return 0
}

// ShopAdderData 商城特惠商品状态
type ShopAdderData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LimitTimes      int64 `protobuf:"varint,1,opt,name=LimitTimes,proto3" json:"LimitTimes,omitempty"`           // 每日限制购买次数
	RechargeTimes   int64 `protobuf:"varint,2,opt,name=RechargeTimes,proto3" json:"RechargeTimes,omitempty"`     // 玩家已经购买次数
	NextRefreshTime int64 `protobuf:"varint,3,opt,name=NextRefreshTime,proto3" json:"NextRefreshTime,omitempty"` // 下次刷新状态的时间戳(秒)
}

func (x *ShopAdderData) Reset() {
	*x = ShopAdderData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_structs_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShopAdderData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShopAdderData) ProtoMessage() {}

func (x *ShopAdderData) ProtoReflect() protoreflect.Message {
	mi := &file_structs_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShopAdderData.ProtoReflect.Descriptor instead.
func (*ShopAdderData) Descriptor() ([]byte, []int) {
	return file_structs_proto_rawDescGZIP(), []int{15}
}

func (x *ShopAdderData) GetLimitTimes() int64 {
	if x != nil {
		return x.LimitTimes
	}
	return 0
}

func (x *ShopAdderData) GetRechargeTimes() int64 {
	if x != nil {
		return x.RechargeTimes
	}
	return 0
}

func (x *ShopAdderData) GetNextRefreshTime() int64 {
	if x != nil {
		return x.NextRefreshTime
	}
	return 0
}

type MailItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID      int64  `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`           // 邮件ID
	Title   string `protobuf:"bytes,2,opt,name=Title,proto3" json:"Title,omitempty"`      // 邮件标题
	Content string `protobuf:"bytes,3,opt,name=Content,proto3" json:"Content,omitempty"`  // 邮件内容
	EndTime int64  `protobuf:"varint,4,opt,name=EndTime,proto3" json:"EndTime,omitempty"` // 邮件最后有效时间戳
	Readed  bool   `protobuf:"varint,5,opt,name=Readed,proto3" json:"Readed,omitempty"`   // 邮件是否已经查看过
	Coin    int64  `protobuf:"varint,6,opt,name=Coin,proto3" json:"Coin,omitempty"`       // 邮件奖励
}

func (x *MailItem) Reset() {
	*x = MailItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_structs_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MailItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MailItem) ProtoMessage() {}

func (x *MailItem) ProtoReflect() protoreflect.Message {
	mi := &file_structs_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MailItem.ProtoReflect.Descriptor instead.
func (*MailItem) Descriptor() ([]byte, []int) {
	return file_structs_proto_rawDescGZIP(), []int{16}
}

func (x *MailItem) GetID() int64 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *MailItem) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *MailItem) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *MailItem) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *MailItem) GetReaded() bool {
	if x != nil {
		return x.Readed
	}
	return false
}

func (x *MailItem) GetCoin() int64 {
	if x != nil {
		return x.Coin
	}
	return 0
}

type CustomerItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Link   string `protobuf:"bytes,1,opt,name=Link,proto3" json:"Link,omitempty"`      // 客服链接
	Weight int64  `protobuf:"varint,2,opt,name=Weight,proto3" json:"Weight,omitempty"` // 客服权重
}

func (x *CustomerItem) Reset() {
	*x = CustomerItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_structs_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CustomerItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CustomerItem) ProtoMessage() {}

func (x *CustomerItem) ProtoReflect() protoreflect.Message {
	mi := &file_structs_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CustomerItem.ProtoReflect.Descriptor instead.
func (*CustomerItem) Descriptor() ([]byte, []int) {
	return file_structs_proto_rawDescGZIP(), []int{17}
}

func (x *CustomerItem) GetLink() string {
	if x != nil {
		return x.Link
	}
	return ""
}

func (x *CustomerItem) GetWeight() int64 {
	if x != nil {
		return x.Weight
	}
	return 0
}

// WithdrawItem 提现档位
type WithdrawLimit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"ID"
	ID int64 `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"` // 档位ID
	// @inject_tag: json:"Limit"
	Limit int64 `protobuf:"varint,2,opt,name=Limit,proto3" json:"Limit,omitempty"` // 额度
	// @inject_tag: json:"Commission"
	Commission int64 `protobuf:"varint,3,opt,name=Commission,proto3" json:"Commission,omitempty"` // 手续费比例
	// @inject_tag: json:"MinLimit"
	MinLimit int64 `protobuf:"varint,4,opt,name=MinLimit,proto3" json:"MinLimit,omitempty"` // 最低额度(左闭右开)
	// @inject_tag: json:"MaxLimit"
	MaxLimit int64 `protobuf:"varint,5,opt,name=MaxLimit,proto3" json:"MaxLimit,omitempty"` // 最高额度(左闭右开)
}

func (x *WithdrawLimit) Reset() {
	*x = WithdrawLimit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_structs_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WithdrawLimit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WithdrawLimit) ProtoMessage() {}

func (x *WithdrawLimit) ProtoReflect() protoreflect.Message {
	mi := &file_structs_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WithdrawLimit.ProtoReflect.Descriptor instead.
func (*WithdrawLimit) Descriptor() ([]byte, []int) {
	return file_structs_proto_rawDescGZIP(), []int{18}
}

func (x *WithdrawLimit) GetID() int64 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *WithdrawLimit) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *WithdrawLimit) GetCommission() int64 {
	if x != nil {
		return x.Commission
	}
	return 0
}

func (x *WithdrawLimit) GetMinLimit() int64 {
	if x != nil {
		return x.MinLimit
	}
	return 0
}

func (x *WithdrawLimit) GetMaxLimit() int64 {
	if x != nil {
		return x.MaxLimit
	}
	return 0
}

type Reconnect struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Interval int64 `protobuf:"varint,1,opt,name=Interval,proto3" json:"Interval,omitempty"`
	Times    int64 `protobuf:"varint,2,opt,name=Times,proto3" json:"Times,omitempty"`
}

func (x *Reconnect) Reset() {
	*x = Reconnect{}
	if protoimpl.UnsafeEnabled {
		mi := &file_structs_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Reconnect) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Reconnect) ProtoMessage() {}

func (x *Reconnect) ProtoReflect() protoreflect.Message {
	mi := &file_structs_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Reconnect.ProtoReflect.Descriptor instead.
func (*Reconnect) Descriptor() ([]byte, []int) {
	return file_structs_proto_rawDescGZIP(), []int{19}
}

func (x *Reconnect) GetInterval() int64 {
	if x != nil {
		return x.Interval
	}
	return 0
}

func (x *Reconnect) GetTimes() int64 {
	if x != nil {
		return x.Times
	}
	return 0
}

// ShopItem 商城物品
type ShopItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"GoodsID"
	GoodsID string `protobuf:"bytes,1,opt,name=GoodsID,proto3" json:"GoodsID,omitempty"` // 商品ID
	// @inject_tag: json:"PictureID"
	PictureID int64 `protobuf:"varint,2,opt,name=PictureID,proto3" json:"PictureID,omitempty"` // 图片ID
	// @inject_tag: json:"ProductID"
	ProductID string `protobuf:"bytes,3,opt,name=ProductID,proto3" json:"ProductID,omitempty"` // 计费点
	// @inject_tag: json:"PayType"
	PayType string `protobuf:"bytes,4,opt,name=PayType,proto3" json:"PayType,omitempty"` // 支付方式
	// @inject_tag: json:"Pay"
	Pay int64 `protobuf:"varint,5,opt,name=Pay,proto3" json:"Pay,omitempty"` // 支付金额(10000)
	// @inject_tag: json:"Receipt"
	ReceiptPay int64 `protobuf:"varint,6,opt,name=ReceiptPay,proto3" json:"ReceiptPay,omitempty"` // 到账付费金币(10000)
	// @inject_tag: json:"Receipt"
	ReceiptFree int64 `protobuf:"varint,7,opt,name=ReceiptFree,proto3" json:"ReceiptFree,omitempty"` // 到账免费金币(10000)
	// @inject_tag: json:"Scene"
	Scene string `protobuf:"bytes,8,opt,name=Scene,proto3" json:"Scene,omitempty"` // 付费场景
	// @inject_tag: json:"PropList"
	PropList []*Prop `protobuf:"bytes,9,rep,name=PropList,proto3" json:"PropList,omitempty"` // 道具列表
	// @inject_tag: json:"DailyLimit"
	DailyLimit int64 `protobuf:"varint,10,opt,name=DailyLimit,proto3" json:"DailyLimit,omitempty"` // 每日限制购买次数
}

func (x *ShopItem) Reset() {
	*x = ShopItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_structs_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShopItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShopItem) ProtoMessage() {}

func (x *ShopItem) ProtoReflect() protoreflect.Message {
	mi := &file_structs_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShopItem.ProtoReflect.Descriptor instead.
func (*ShopItem) Descriptor() ([]byte, []int) {
	return file_structs_proto_rawDescGZIP(), []int{20}
}

func (x *ShopItem) GetGoodsID() string {
	if x != nil {
		return x.GoodsID
	}
	return ""
}

func (x *ShopItem) GetPictureID() int64 {
	if x != nil {
		return x.PictureID
	}
	return 0
}

func (x *ShopItem) GetProductID() string {
	if x != nil {
		return x.ProductID
	}
	return ""
}

func (x *ShopItem) GetPayType() string {
	if x != nil {
		return x.PayType
	}
	return ""
}

func (x *ShopItem) GetPay() int64 {
	if x != nil {
		return x.Pay
	}
	return 0
}

func (x *ShopItem) GetReceiptPay() int64 {
	if x != nil {
		return x.ReceiptPay
	}
	return 0
}

func (x *ShopItem) GetReceiptFree() int64 {
	if x != nil {
		return x.ReceiptFree
	}
	return 0
}

func (x *ShopItem) GetScene() string {
	if x != nil {
		return x.Scene
	}
	return ""
}

func (x *ShopItem) GetPropList() []*Prop {
	if x != nil {
		return x.PropList
	}
	return nil
}

func (x *ShopItem) GetDailyLimit() int64 {
	if x != nil {
		return x.DailyLimit
	}
	return 0
}

// PayType 支付方式
type PayType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"Type"
	Type string `protobuf:"bytes,1,opt,name=Type,proto3" json:"Type,omitempty"` // 付款平台 "Pix" "Google"
	// @inject_tag: json:"ItemList"
	ItemList []*ShopItem `protobuf:"bytes,2,rep,name=ItemList,proto3" json:"ItemList,omitempty"` // 商城物品
}

func (x *PayType) Reset() {
	*x = PayType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_structs_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PayType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayType) ProtoMessage() {}

func (x *PayType) ProtoReflect() protoreflect.Message {
	mi := &file_structs_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayType.ProtoReflect.Descriptor instead.
func (*PayType) Descriptor() ([]byte, []int) {
	return file_structs_proto_rawDescGZIP(), []int{21}
}

func (x *PayType) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *PayType) GetItemList() []*ShopItem {
	if x != nil {
		return x.ItemList
	}
	return nil
}

type Coin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FreeCoin        int64 `protobuf:"varint,1,opt,name=FreeCoin,proto3" json:"FreeCoin,omitempty"`
	FreeWinCoin     int64 `protobuf:"varint,2,opt,name=FreeWinCoin,proto3" json:"FreeWinCoin,omitempty"`
	RechargeCoin    int64 `protobuf:"varint,3,opt,name=RechargeCoin,proto3" json:"RechargeCoin,omitempty"`
	RechargeWinCoin int64 `protobuf:"varint,4,opt,name=RechargeWinCoin,proto3" json:"RechargeWinCoin,omitempty"`
}

func (x *Coin) Reset() {
	*x = Coin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_structs_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Coin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Coin) ProtoMessage() {}

func (x *Coin) ProtoReflect() protoreflect.Message {
	mi := &file_structs_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Coin.ProtoReflect.Descriptor instead.
func (*Coin) Descriptor() ([]byte, []int) {
	return file_structs_proto_rawDescGZIP(), []int{22}
}

func (x *Coin) GetFreeCoin() int64 {
	if x != nil {
		return x.FreeCoin
	}
	return 0
}

func (x *Coin) GetFreeWinCoin() int64 {
	if x != nil {
		return x.FreeWinCoin
	}
	return 0
}

func (x *Coin) GetRechargeCoin() int64 {
	if x != nil {
		return x.RechargeCoin
	}
	return 0
}

func (x *Coin) GetRechargeWinCoin() int64 {
	if x != nil {
		return x.RechargeWinCoin
	}
	return 0
}

type SessionContext struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UID     int64  `protobuf:"varint,1,opt,name=UID,proto3" json:"UID,omitempty"`
	Type    string `protobuf:"bytes,2,opt,name=Type,proto3" json:"Type,omitempty"`
	Package string `protobuf:"bytes,3,opt,name=Package,proto3" json:"Package,omitempty"`
	Account string `protobuf:"bytes,4,opt,name=Account,proto3" json:"Account,omitempty"`
	Device  string `protobuf:"bytes,5,opt,name=Device,proto3" json:"Device,omitempty"`
	Cli     *Cli   `protobuf:"bytes,6,opt,name=Cli,proto3" json:"Cli,omitempty"`
}

func (x *SessionContext) Reset() {
	*x = SessionContext{}
	if protoimpl.UnsafeEnabled {
		mi := &file_structs_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SessionContext) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SessionContext) ProtoMessage() {}

func (x *SessionContext) ProtoReflect() protoreflect.Message {
	mi := &file_structs_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SessionContext.ProtoReflect.Descriptor instead.
func (*SessionContext) Descriptor() ([]byte, []int) {
	return file_structs_proto_rawDescGZIP(), []int{23}
}

func (x *SessionContext) GetUID() int64 {
	if x != nil {
		return x.UID
	}
	return 0
}

func (x *SessionContext) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *SessionContext) GetPackage() string {
	if x != nil {
		return x.Package
	}
	return ""
}

func (x *SessionContext) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *SessionContext) GetDevice() string {
	if x != nil {
		return x.Device
	}
	return ""
}

func (x *SessionContext) GetCli() *Cli {
	if x != nil {
		return x.Cli
	}
	return nil
}

type LogContext struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Identifier *Identifier `protobuf:"bytes,1,opt,name=Identifier,proto3" json:"Identifier,omitempty"`
	Game       *Game       `protobuf:"bytes,2,opt,name=Game,proto3" json:"Game,omitempty"`
	Srv        *Srv        `protobuf:"bytes,3,opt,name=Srv,proto3" json:"Srv,omitempty"`
	UID        int64       `protobuf:"varint,4,opt,name=UID,proto3" json:"UID,omitempty"`
	Cli        *Cli        `protobuf:"bytes,5,opt,name=Cli,proto3" json:"Cli,omitempty"`
	Acc        *Acc        `protobuf:"bytes,6,opt,name=Acc,proto3" json:"Acc,omitempty"`
	User       *User       `protobuf:"bytes,7,opt,name=User,proto3" json:"User,omitempty"`
	Char       *Char       `protobuf:"bytes,8,opt,name=Char,proto3" json:"Char,omitempty"`
	Book       *Book       `protobuf:"bytes,9,opt,name=Book,proto3" json:"Book,omitempty"`
	Agg        *Agg        `protobuf:"bytes,10,opt,name=Agg,proto3" json:"Agg,omitempty"`
}

func (x *LogContext) Reset() {
	*x = LogContext{}
	if protoimpl.UnsafeEnabled {
		mi := &file_structs_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogContext) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogContext) ProtoMessage() {}

func (x *LogContext) ProtoReflect() protoreflect.Message {
	mi := &file_structs_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogContext.ProtoReflect.Descriptor instead.
func (*LogContext) Descriptor() ([]byte, []int) {
	return file_structs_proto_rawDescGZIP(), []int{24}
}

func (x *LogContext) GetIdentifier() *Identifier {
	if x != nil {
		return x.Identifier
	}
	return nil
}

func (x *LogContext) GetGame() *Game {
	if x != nil {
		return x.Game
	}
	return nil
}

func (x *LogContext) GetSrv() *Srv {
	if x != nil {
		return x.Srv
	}
	return nil
}

func (x *LogContext) GetUID() int64 {
	if x != nil {
		return x.UID
	}
	return 0
}

func (x *LogContext) GetCli() *Cli {
	if x != nil {
		return x.Cli
	}
	return nil
}

func (x *LogContext) GetAcc() *Acc {
	if x != nil {
		return x.Acc
	}
	return nil
}

func (x *LogContext) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *LogContext) GetChar() *Char {
	if x != nil {
		return x.Char
	}
	return nil
}

func (x *LogContext) GetBook() *Book {
	if x != nil {
		return x.Book
	}
	return nil
}

func (x *LogContext) GetAgg() *Agg {
	if x != nil {
		return x.Agg
	}
	return nil
}

type MailCoin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FreeCoin        int64 `protobuf:"varint,1,opt,name=FreeCoin,proto3" json:"FreeCoin,omitempty"`               // 免费不可提现
	FreeWinCoin     int64 `protobuf:"varint,2,opt,name=FreeWinCoin,proto3" json:"FreeWinCoin,omitempty"`         // 免费可提现
	RechargeCoin    int64 `protobuf:"varint,3,opt,name=RechargeCoin,proto3" json:"RechargeCoin,omitempty"`       // 付费不可提现
	RechargeWinCoin int64 `protobuf:"varint,4,opt,name=RechargeWinCoin,proto3" json:"RechargeWinCoin,omitempty"` // 付费可提现
}

func (x *MailCoin) Reset() {
	*x = MailCoin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_structs_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MailCoin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MailCoin) ProtoMessage() {}

func (x *MailCoin) ProtoReflect() protoreflect.Message {
	mi := &file_structs_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MailCoin.ProtoReflect.Descriptor instead.
func (*MailCoin) Descriptor() ([]byte, []int) {
	return file_structs_proto_rawDescGZIP(), []int{25}
}

func (x *MailCoin) GetFreeCoin() int64 {
	if x != nil {
		return x.FreeCoin
	}
	return 0
}

func (x *MailCoin) GetFreeWinCoin() int64 {
	if x != nil {
		return x.FreeWinCoin
	}
	return 0
}

func (x *MailCoin) GetRechargeCoin() int64 {
	if x != nil {
		return x.RechargeCoin
	}
	return 0
}

func (x *MailCoin) GetRechargeWinCoin() int64 {
	if x != nil {
		return x.RechargeWinCoin
	}
	return 0
}

type Mail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID          int64     `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`                  // 邮件ID
	Type        int64     `protobuf:"varint,2,opt,name=Type,proto3" json:"Type,omitempty"`              // 邮件类型 默认0 1-补单
	Title       string    `protobuf:"bytes,3,opt,name=Title,proto3" json:"Title,omitempty"`             // 邮件标题
	TitleAppend string    `protobuf:"bytes,4,opt,name=TitleAppend,proto3" json:"TitleAppend,omitempty"` // 邮件附加标题
	Content     string    `protobuf:"bytes,5,opt,name=Content,proto3" json:"Content,omitempty"`         // 邮件内容
	Prop        *MailCoin `protobuf:"bytes,6,opt,name=Prop,proto3" json:"Prop,omitempty"`               // 邮件奖励
	From        string    `protobuf:"bytes,7,opt,name=From,proto3" json:"From,omitempty"`               // 邮件来源(发送者)
	CreateTime  int64     `protobuf:"varint,8,opt,name=CreateTime,proto3" json:"CreateTime,omitempty"`  // 邮件产生的时间戳
	LiftTime    int64     `protobuf:"varint,9,opt,name=LiftTime,proto3" json:"LiftTime,omitempty"`      // 邮件最后有效时间戳
	Readed      bool      `protobuf:"varint,10,opt,name=Readed,proto3" json:"Readed,omitempty"`         // 邮件是否已经查看过 0未看过,1已看过
	Received    bool      `protobuf:"varint,11,opt,name=Received,proto3" json:"Received,omitempty"`     // 邮件内奖励是否已经领取过
}

func (x *Mail) Reset() {
	*x = Mail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_structs_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Mail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Mail) ProtoMessage() {}

func (x *Mail) ProtoReflect() protoreflect.Message {
	mi := &file_structs_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Mail.ProtoReflect.Descriptor instead.
func (*Mail) Descriptor() ([]byte, []int) {
	return file_structs_proto_rawDescGZIP(), []int{26}
}

func (x *Mail) GetID() int64 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *Mail) GetType() int64 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *Mail) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Mail) GetTitleAppend() string {
	if x != nil {
		return x.TitleAppend
	}
	return ""
}

func (x *Mail) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *Mail) GetProp() *MailCoin {
	if x != nil {
		return x.Prop
	}
	return nil
}

func (x *Mail) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *Mail) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *Mail) GetLiftTime() int64 {
	if x != nil {
		return x.LiftTime
	}
	return 0
}

func (x *Mail) GetReaded() bool {
	if x != nil {
		return x.Readed
	}
	return false
}

func (x *Mail) GetReceived() bool {
	if x != nil {
		return x.Received
	}
	return false
}

// 充值提现记录
type CoinRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 记录类型 Pay or Draw
	// @inject_tag: json:"Tipo"
	Tipo string `protobuf:"bytes,1,opt,name=Tipo,proto3" json:"Tipo,omitempty"`
	// 数量
	// @inject_tag: json:"Quantia"
	Quantia int64 `protobuf:"varint,2,opt,name=Quantia,proto3" json:"Quantia,omitempty"`
	// 记录ID
	// @inject_tag: json:"ID"
	ID string `protobuf:"bytes,3,opt,name=ID,proto3" json:"ID,omitempty"`
	//	发生时间
	//
	// @inject_tag: json:"Tempo"
	Tempo string `protobuf:"bytes,4,opt,name=Tempo,proto3" json:"Tempo,omitempty"`
	//	发生时间
	//
	// @inject_tag: json:"Time"
	Time int64 `protobuf:"varint,5,opt,name=Time,proto3" json:"Time,omitempty"`
	// 状态
	// @inject_tag: json:"Status"
	Status string `protobuf:"bytes,6,opt,name=Status,proto3" json:"Status,omitempty"`
}

func (x *CoinRecord) Reset() {
	*x = CoinRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_structs_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CoinRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoinRecord) ProtoMessage() {}

func (x *CoinRecord) ProtoReflect() protoreflect.Message {
	mi := &file_structs_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoinRecord.ProtoReflect.Descriptor instead.
func (*CoinRecord) Descriptor() ([]byte, []int) {
	return file_structs_proto_rawDescGZIP(), []int{27}
}

func (x *CoinRecord) GetTipo() string {
	if x != nil {
		return x.Tipo
	}
	return ""
}

func (x *CoinRecord) GetQuantia() int64 {
	if x != nil {
		return x.Quantia
	}
	return 0
}

func (x *CoinRecord) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *CoinRecord) GetTempo() string {
	if x != nil {
		return x.Tempo
	}
	return ""
}

func (x *CoinRecord) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *CoinRecord) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type SystemSwitch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SystemName string `protobuf:"bytes,1,opt,name=SystemName,proto3" json:"SystemName,omitempty"`
	IsOpen     int64  `protobuf:"varint,2,opt,name=IsOpen,proto3" json:"IsOpen,omitempty"`
}

func (x *SystemSwitch) Reset() {
	*x = SystemSwitch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_structs_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemSwitch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemSwitch) ProtoMessage() {}

func (x *SystemSwitch) ProtoReflect() protoreflect.Message {
	mi := &file_structs_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemSwitch.ProtoReflect.Descriptor instead.
func (*SystemSwitch) Descriptor() ([]byte, []int) {
	return file_structs_proto_rawDescGZIP(), []int{28}
}

func (x *SystemSwitch) GetSystemName() string {
	if x != nil {
		return x.SystemName
	}
	return ""
}

func (x *SystemSwitch) GetIsOpen() int64 {
	if x != nil {
		return x.IsOpen
	}
	return 0
}

type UserTag struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tag             string `protobuf:"bytes,1,opt,name=Tag,proto3" json:"Tag,omitempty"`
	PixShop         bool   `protobuf:"varint,2,opt,name=PixShop,proto3" json:"PixShop,omitempty"`
	SpecialOffer    bool   `protobuf:"varint,3,opt,name=SpecialOffer,proto3" json:"SpecialOffer,omitempty"`
	MoneyToken      bool   `protobuf:"varint,4,opt,name=MoneyToken,proto3" json:"MoneyToken,omitempty"`
	Withdraw        bool   `protobuf:"varint,5,opt,name=Withdraw,proto3" json:"Withdraw,omitempty"`
	FbIconSubscript bool   `protobuf:"varint,6,opt,name=FbIconSubscript,proto3" json:"FbIconSubscript,omitempty"`
	Invite          bool   `protobuf:"varint,7,opt,name=Invite,proto3" json:"Invite,omitempty"`
	Broadcast       bool   `protobuf:"varint,8,opt,name=Broadcast,proto3" json:"Broadcast,omitempty"`
	GoogleShop      bool   `protobuf:"varint,9,opt,name=GoogleShop,proto3" json:"GoogleShop,omitempty"`
}

func (x *UserTag) Reset() {
	*x = UserTag{}
	if protoimpl.UnsafeEnabled {
		mi := &file_structs_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserTag) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserTag) ProtoMessage() {}

func (x *UserTag) ProtoReflect() protoreflect.Message {
	mi := &file_structs_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserTag.ProtoReflect.Descriptor instead.
func (*UserTag) Descriptor() ([]byte, []int) {
	return file_structs_proto_rawDescGZIP(), []int{29}
}

func (x *UserTag) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

func (x *UserTag) GetPixShop() bool {
	if x != nil {
		return x.PixShop
	}
	return false
}

func (x *UserTag) GetSpecialOffer() bool {
	if x != nil {
		return x.SpecialOffer
	}
	return false
}

func (x *UserTag) GetMoneyToken() bool {
	if x != nil {
		return x.MoneyToken
	}
	return false
}

func (x *UserTag) GetWithdraw() bool {
	if x != nil {
		return x.Withdraw
	}
	return false
}

func (x *UserTag) GetFbIconSubscript() bool {
	if x != nil {
		return x.FbIconSubscript
	}
	return false
}

func (x *UserTag) GetInvite() bool {
	if x != nil {
		return x.Invite
	}
	return false
}

func (x *UserTag) GetBroadcast() bool {
	if x != nil {
		return x.Broadcast
	}
	return false
}

func (x *UserTag) GetGoogleShop() bool {
	if x != nil {
		return x.GoogleShop
	}
	return false
}

type BonusItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID    string `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Bonus int64  `protobuf:"varint,2,opt,name=Bonus,proto3" json:"Bonus,omitempty"`
}

func (x *BonusItem) Reset() {
	*x = BonusItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_structs_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BonusItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BonusItem) ProtoMessage() {}

func (x *BonusItem) ProtoReflect() protoreflect.Message {
	mi := &file_structs_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BonusItem.ProtoReflect.Descriptor instead.
func (*BonusItem) Descriptor() ([]byte, []int) {
	return file_structs_proto_rawDescGZIP(), []int{30}
}

func (x *BonusItem) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *BonusItem) GetBonus() int64 {
	if x != nil {
		return x.Bonus
	}
	return 0
}

type OnlineDailyDealsConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Duration  int64 `protobuf:"varint,1,opt,name=Duration,proto3" json:"Duration,omitempty"`
	ResetTime int64 `protobuf:"varint,2,opt,name=ResetTime,proto3" json:"ResetTime,omitempty"`
}

func (x *OnlineDailyDealsConfig) Reset() {
	*x = OnlineDailyDealsConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_structs_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OnlineDailyDealsConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OnlineDailyDealsConfig) ProtoMessage() {}

func (x *OnlineDailyDealsConfig) ProtoReflect() protoreflect.Message {
	mi := &file_structs_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OnlineDailyDealsConfig.ProtoReflect.Descriptor instead.
func (*OnlineDailyDealsConfig) Descriptor() ([]byte, []int) {
	return file_structs_proto_rawDescGZIP(), []int{31}
}

func (x *OnlineDailyDealsConfig) GetDuration() int64 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *OnlineDailyDealsConfig) GetResetTime() int64 {
	if x != nil {
		return x.ResetTime
	}
	return 0
}

type OnlineWeeklyDealsConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Duration  int64 `protobuf:"varint,1,opt,name=Duration,proto3" json:"Duration,omitempty"`
	ResetTime int64 `protobuf:"varint,2,opt,name=ResetTime,proto3" json:"ResetTime,omitempty"`
}

func (x *OnlineWeeklyDealsConfig) Reset() {
	*x = OnlineWeeklyDealsConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_structs_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OnlineWeeklyDealsConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OnlineWeeklyDealsConfig) ProtoMessage() {}

func (x *OnlineWeeklyDealsConfig) ProtoReflect() protoreflect.Message {
	mi := &file_structs_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OnlineWeeklyDealsConfig.ProtoReflect.Descriptor instead.
func (*OnlineWeeklyDealsConfig) Descriptor() ([]byte, []int) {
	return file_structs_proto_rawDescGZIP(), []int{32}
}

func (x *OnlineWeeklyDealsConfig) GetDuration() int64 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *OnlineWeeklyDealsConfig) GetResetTime() int64 {
	if x != nil {
		return x.ResetTime
	}
	return 0
}

type PaymentRatio struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MinCount int64 `protobuf:"varint,1,opt,name=MinCount,proto3" json:"MinCount,omitempty"` // 最低额度
	MaxCount int64 `protobuf:"varint,2,opt,name=MaxCount,proto3" json:"MaxCount,omitempty"` // 最高额度
	Ratio    int64 `protobuf:"varint,3,opt,name=Ratio,proto3" json:"Ratio,omitempty"`       // 赠送比例(x100)
}

func (x *PaymentRatio) Reset() {
	*x = PaymentRatio{}
	if protoimpl.UnsafeEnabled {
		mi := &file_structs_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaymentRatio) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentRatio) ProtoMessage() {}

func (x *PaymentRatio) ProtoReflect() protoreflect.Message {
	mi := &file_structs_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentRatio.ProtoReflect.Descriptor instead.
func (*PaymentRatio) Descriptor() ([]byte, []int) {
	return file_structs_proto_rawDescGZIP(), []int{33}
}

func (x *PaymentRatio) GetMinCount() int64 {
	if x != nil {
		return x.MinCount
	}
	return 0
}

func (x *PaymentRatio) GetMaxCount() int64 {
	if x != nil {
		return x.MaxCount
	}
	return 0
}

func (x *PaymentRatio) GetRatio() int64 {
	if x != nil {
		return x.Ratio
	}
	return 0
}

type HallConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Reconnect         *Reconnect               `protobuf:"bytes,1,opt,name=Reconnect,proto3" json:"Reconnect,omitempty"`
	Heartbeat         *Heartbeat               `protobuf:"bytes,2,opt,name=Heartbeat,proto3" json:"Heartbeat,omitempty"`
	GameSorts         []*GameSort              `protobuf:"bytes,3,rep,name=GameSorts,proto3" json:"GameSorts,omitempty"`
	SystemSwitch      []*SystemSwitch          `protobuf:"bytes,4,rep,name=SystemSwitch,proto3" json:"SystemSwitch,omitempty"`
	UserTags          []*UserTag               `protobuf:"bytes,5,rep,name=UserTags,proto3" json:"UserTags,omitempty"`
	ShopItems         []*ShopItem              `protobuf:"bytes,6,rep,name=ShopItems,proto3" json:"ShopItems,omitempty"`
	WithdrawLimits    []*WithdrawLimit         `protobuf:"bytes,7,rep,name=WithdrawLimits,proto3" json:"WithdrawLimits,omitempty"`
	FacebookBindCoin  int64                    `protobuf:"varint,8,opt,name=FacebookBindCoin,proto3" json:"FacebookBindCoin,omitempty"`
	TagHub            string                   `protobuf:"bytes,9,opt,name=TagHub,proto3" json:"TagHub,omitempty"`
	BonusItems        []*BonusItem             `protobuf:"bytes,10,rep,name=BonusItems,proto3" json:"BonusItems,omitempty"`
	DailyDealsConfig  *OnlineDailyDealsConfig  `protobuf:"bytes,11,opt,name=DailyDealsConfig,proto3" json:"DailyDealsConfig,omitempty"`
	WeeklyDealsConfig *OnlineWeeklyDealsConfig `protobuf:"bytes,12,opt,name=WeeklyDealsConfig,proto3" json:"WeeklyDealsConfig,omitempty"`
	InviteURL         string                   `protobuf:"bytes,13,opt,name=InviteURL,proto3" json:"InviteURL,omitempty"`                 // 邀请链接域名
	PlatformCustomer  string                   `protobuf:"bytes,14,opt,name=PlatformCustomer,proto3" json:"PlatformCustomer,omitempty"`   // 平台客服
	SpecialCustomerFB string                   `protobuf:"bytes,15,opt,name=SpecialCustomerFB,proto3" json:"SpecialCustomerFB,omitempty"` // FB专属客服
	SpecialCustomerTG string                   `protobuf:"bytes,16,opt,name=SpecialCustomerTG,proto3" json:"SpecialCustomerTG,omitempty"` // TG专属客服
	SpecialCustomerWS string                   `protobuf:"bytes,17,opt,name=SpecialCustomerWS,proto3" json:"SpecialCustomerWS,omitempty"` // WS专属客服
	CustomPayRaios    []*PaymentRatio          `protobuf:"bytes,18,rep,name=CustomPayRaios,proto3" json:"CustomPayRaios,omitempty"`       // 自定义充值赠送比例
}

func (x *HallConfig) Reset() {
	*x = HallConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_structs_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HallConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HallConfig) ProtoMessage() {}

func (x *HallConfig) ProtoReflect() protoreflect.Message {
	mi := &file_structs_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HallConfig.ProtoReflect.Descriptor instead.
func (*HallConfig) Descriptor() ([]byte, []int) {
	return file_structs_proto_rawDescGZIP(), []int{34}
}

func (x *HallConfig) GetReconnect() *Reconnect {
	if x != nil {
		return x.Reconnect
	}
	return nil
}

func (x *HallConfig) GetHeartbeat() *Heartbeat {
	if x != nil {
		return x.Heartbeat
	}
	return nil
}

func (x *HallConfig) GetGameSorts() []*GameSort {
	if x != nil {
		return x.GameSorts
	}
	return nil
}

func (x *HallConfig) GetSystemSwitch() []*SystemSwitch {
	if x != nil {
		return x.SystemSwitch
	}
	return nil
}

func (x *HallConfig) GetUserTags() []*UserTag {
	if x != nil {
		return x.UserTags
	}
	return nil
}

func (x *HallConfig) GetShopItems() []*ShopItem {
	if x != nil {
		return x.ShopItems
	}
	return nil
}

func (x *HallConfig) GetWithdrawLimits() []*WithdrawLimit {
	if x != nil {
		return x.WithdrawLimits
	}
	return nil
}

func (x *HallConfig) GetFacebookBindCoin() int64 {
	if x != nil {
		return x.FacebookBindCoin
	}
	return 0
}

func (x *HallConfig) GetTagHub() string {
	if x != nil {
		return x.TagHub
	}
	return ""
}

func (x *HallConfig) GetBonusItems() []*BonusItem {
	if x != nil {
		return x.BonusItems
	}
	return nil
}

func (x *HallConfig) GetDailyDealsConfig() *OnlineDailyDealsConfig {
	if x != nil {
		return x.DailyDealsConfig
	}
	return nil
}

func (x *HallConfig) GetWeeklyDealsConfig() *OnlineWeeklyDealsConfig {
	if x != nil {
		return x.WeeklyDealsConfig
	}
	return nil
}

func (x *HallConfig) GetInviteURL() string {
	if x != nil {
		return x.InviteURL
	}
	return ""
}

func (x *HallConfig) GetPlatformCustomer() string {
	if x != nil {
		return x.PlatformCustomer
	}
	return ""
}

func (x *HallConfig) GetSpecialCustomerFB() string {
	if x != nil {
		return x.SpecialCustomerFB
	}
	return ""
}

func (x *HallConfig) GetSpecialCustomerTG() string {
	if x != nil {
		return x.SpecialCustomerTG
	}
	return ""
}

func (x *HallConfig) GetSpecialCustomerWS() string {
	if x != nil {
		return x.SpecialCustomerWS
	}
	return ""
}

func (x *HallConfig) GetCustomPayRaios() []*PaymentRatio {
	if x != nil {
		return x.CustomPayRaios
	}
	return nil
}

type Heartbeat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Interval int64 `protobuf:"varint,1,opt,name=Interval,proto3" json:"Interval,omitempty"`
	Timeout  int64 `protobuf:"varint,2,opt,name=Timeout,proto3" json:"Timeout,omitempty"`
}

func (x *Heartbeat) Reset() {
	*x = Heartbeat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_structs_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Heartbeat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Heartbeat) ProtoMessage() {}

func (x *Heartbeat) ProtoReflect() protoreflect.Message {
	mi := &file_structs_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Heartbeat.ProtoReflect.Descriptor instead.
func (*Heartbeat) Descriptor() ([]byte, []int) {
	return file_structs_proto_rawDescGZIP(), []int{35}
}

func (x *Heartbeat) GetInterval() int64 {
	if x != nil {
		return x.Interval
	}
	return 0
}

func (x *Heartbeat) GetTimeout() int64 {
	if x != nil {
		return x.Timeout
	}
	return 0
}

type RandxTrackerItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"Tag"
	Tag string `protobuf:"bytes,1,opt,name=Tag,proto3" json:"Tag,omitempty"`
	// @inject_tag: json:"Index"
	Index int64 `protobuf:"varint,2,opt,name=Index,proto3" json:"Index,omitempty"`
}

func (x *RandxTrackerItem) Reset() {
	*x = RandxTrackerItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_structs_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RandxTrackerItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RandxTrackerItem) ProtoMessage() {}

func (x *RandxTrackerItem) ProtoReflect() protoreflect.Message {
	mi := &file_structs_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RandxTrackerItem.ProtoReflect.Descriptor instead.
func (*RandxTrackerItem) Descriptor() ([]byte, []int) {
	return file_structs_proto_rawDescGZIP(), []int{36}
}

func (x *RandxTrackerItem) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

func (x *RandxTrackerItem) GetIndex() int64 {
	if x != nil {
		return x.Index
	}
	return 0
}

type RandxTracker struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*RandxTrackerItem `protobuf:"bytes,2,rep,name=Items,proto3" json:"Items,omitempty"`
}

func (x *RandxTracker) Reset() {
	*x = RandxTracker{}
	if protoimpl.UnsafeEnabled {
		mi := &file_structs_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RandxTracker) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RandxTracker) ProtoMessage() {}

func (x *RandxTracker) ProtoReflect() protoreflect.Message {
	mi := &file_structs_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RandxTracker.ProtoReflect.Descriptor instead.
func (*RandxTracker) Descriptor() ([]byte, []int) {
	return file_structs_proto_rawDescGZIP(), []int{37}
}

func (x *RandxTracker) GetItems() []*RandxTrackerItem {
	if x != nil {
		return x.Items
	}
	return nil
}

type GameConfigItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Game               string `protobuf:"bytes,1,opt,name=Game,proto3" json:"Game,omitempty"`
	EnterRechargeLimit int64  `protobuf:"varint,2,opt,name=EnterRechargeLimit,proto3" json:"EnterRechargeLimit,omitempty"`
	EnterCarryLimit    int64  `protobuf:"varint,3,opt,name=EnterCarryLimit,proto3" json:"EnterCarryLimit,omitempty"`
	BetRechargeLimit   int64  `protobuf:"varint,4,opt,name=BetRechargeLimit,proto3" json:"BetRechargeLimit,omitempty"`
	BetCarryLimit      int64  `protobuf:"varint,5,opt,name=BetCarryLimit,proto3" json:"BetCarryLimit,omitempty"`
	WinAtMost          int64  `protobuf:"varint,6,opt,name=WinAtMost,proto3" json:"WinAtMost,omitempty"`
}

func (x *GameConfigItem) Reset() {
	*x = GameConfigItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_structs_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameConfigItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameConfigItem) ProtoMessage() {}

func (x *GameConfigItem) ProtoReflect() protoreflect.Message {
	mi := &file_structs_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameConfigItem.ProtoReflect.Descriptor instead.
func (*GameConfigItem) Descriptor() ([]byte, []int) {
	return file_structs_proto_rawDescGZIP(), []int{38}
}

func (x *GameConfigItem) GetGame() string {
	if x != nil {
		return x.Game
	}
	return ""
}

func (x *GameConfigItem) GetEnterRechargeLimit() int64 {
	if x != nil {
		return x.EnterRechargeLimit
	}
	return 0
}

func (x *GameConfigItem) GetEnterCarryLimit() int64 {
	if x != nil {
		return x.EnterCarryLimit
	}
	return 0
}

func (x *GameConfigItem) GetBetRechargeLimit() int64 {
	if x != nil {
		return x.BetRechargeLimit
	}
	return 0
}

func (x *GameConfigItem) GetBetCarryLimit() int64 {
	if x != nil {
		return x.BetCarryLimit
	}
	return 0
}

func (x *GameConfigItem) GetWinAtMost() int64 {
	if x != nil {
		return x.WinAtMost
	}
	return 0
}

type PayTypeConfigItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID             int64   `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	RechargeAmount []int64 `protobuf:"varint,2,rep,packed,name=RechargeAmount,proto3" json:"RechargeAmount,omitempty"`
	BetCarryLimit  int64   `protobuf:"varint,3,opt,name=BetCarryLimit,proto3" json:"BetCarryLimit,omitempty"`
}

func (x *PayTypeConfigItem) Reset() {
	*x = PayTypeConfigItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_structs_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PayTypeConfigItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayTypeConfigItem) ProtoMessage() {}

func (x *PayTypeConfigItem) ProtoReflect() protoreflect.Message {
	mi := &file_structs_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayTypeConfigItem.ProtoReflect.Descriptor instead.
func (*PayTypeConfigItem) Descriptor() ([]byte, []int) {
	return file_structs_proto_rawDescGZIP(), []int{39}
}

func (x *PayTypeConfigItem) GetID() int64 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *PayTypeConfigItem) GetRechargeAmount() []int64 {
	if x != nil {
		return x.RechargeAmount
	}
	return nil
}

func (x *PayTypeConfigItem) GetBetCarryLimit() int64 {
	if x != nil {
		return x.BetCarryLimit
	}
	return 0
}

type OptGameConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameConfigItems    []*GameConfigItem    `protobuf:"bytes,1,rep,name=GameConfigItems,proto3" json:"GameConfigItems,omitempty"`
	PayTypeConfigItems []*PayTypeConfigItem `protobuf:"bytes,2,rep,name=PayTypeConfigItems,proto3" json:"PayTypeConfigItems,omitempty"`
}

func (x *OptGameConfig) Reset() {
	*x = OptGameConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_structs_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OptGameConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OptGameConfig) ProtoMessage() {}

func (x *OptGameConfig) ProtoReflect() protoreflect.Message {
	mi := &file_structs_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OptGameConfig.ProtoReflect.Descriptor instead.
func (*OptGameConfig) Descriptor() ([]byte, []int) {
	return file_structs_proto_rawDescGZIP(), []int{40}
}

func (x *OptGameConfig) GetGameConfigItems() []*GameConfigItem {
	if x != nil {
		return x.GameConfigItems
	}
	return nil
}

func (x *OptGameConfig) GetPayTypeConfigItems() []*PayTypeConfigItem {
	if x != nil {
		return x.PayTypeConfigItems
	}
	return nil
}

type RecorderResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vector          []int64 `protobuf:"varint,1,rep,packed,name=Vector,proto3" json:"Vector,omitempty"`
	LackCoin        bool    `protobuf:"varint,7,opt,name=LackCoin,proto3" json:"LackCoin,omitempty"`
	ExpectedWinCoin int64   `protobuf:"varint,8,opt,name=ExpectedWinCoin,proto3" json:"ExpectedWinCoin,omitempty"`
}

func (x *RecorderResult) Reset() {
	*x = RecorderResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_structs_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecorderResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecorderResult) ProtoMessage() {}

func (x *RecorderResult) ProtoReflect() protoreflect.Message {
	mi := &file_structs_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecorderResult.ProtoReflect.Descriptor instead.
func (*RecorderResult) Descriptor() ([]byte, []int) {
	return file_structs_proto_rawDescGZIP(), []int{41}
}

func (x *RecorderResult) GetVector() []int64 {
	if x != nil {
		return x.Vector
	}
	return nil
}

func (x *RecorderResult) GetLackCoin() bool {
	if x != nil {
		return x.LackCoin
	}
	return false
}

func (x *RecorderResult) GetExpectedWinCoin() int64 {
	if x != nil {
		return x.ExpectedWinCoin
	}
	return 0
}

type Prop struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Kind        int64  `protobuf:"varint,1,opt,name=Kind,proto3" json:"Kind,omitempty"`               // 道具种类 1-特殊道具 2-普通道具
	Type        int64  `protobuf:"varint,2,opt,name=Type,proto3" json:"Type,omitempty"`               // 道具类型
	ID          string `protobuf:"bytes,3,opt,name=ID,proto3" json:"ID,omitempty"`                    // 道具ID
	Value       int64  `protobuf:"varint,4,opt,name=Value,proto3" json:"Value,omitempty"`             // 道具生效值
	UsableTimes int64  `protobuf:"varint,5,opt,name=UsableTimes,proto3" json:"UsableTimes,omitempty"` // 道具可使用次数
	CreateTime  int64  `protobuf:"varint,6,opt,name=CreateTime,proto3" json:"CreateTime,omitempty"`   // 道具创建时间戳(秒)
	LifeTime    int64  `protobuf:"varint,7,opt,name=LifeTime,proto3" json:"LifeTime,omitempty"`       // 道具生存时间(秒)
}

func (x *Prop) Reset() {
	*x = Prop{}
	if protoimpl.UnsafeEnabled {
		mi := &file_structs_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Prop) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Prop) ProtoMessage() {}

func (x *Prop) ProtoReflect() protoreflect.Message {
	mi := &file_structs_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Prop.ProtoReflect.Descriptor instead.
func (*Prop) Descriptor() ([]byte, []int) {
	return file_structs_proto_rawDescGZIP(), []int{42}
}

func (x *Prop) GetKind() int64 {
	if x != nil {
		return x.Kind
	}
	return 0
}

func (x *Prop) GetType() int64 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *Prop) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *Prop) GetValue() int64 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *Prop) GetUsableTimes() int64 {
	if x != nil {
		return x.UsableTimes
	}
	return 0
}

func (x *Prop) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *Prop) GetLifeTime() int64 {
	if x != nil {
		return x.LifeTime
	}
	return 0
}

var File_structs_proto protoreflect.FileDescriptor

var file_structs_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x03, 0x63, 0x6c, 0x69, 0x22, 0x90, 0x01, 0x0a, 0x04, 0x47, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x6f, 0x6f,
	0x6d, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x52, 0x6f, 0x6f, 0x6d, 0x49,
	0x44, 0x12, 0x1a, 0x0a, 0x08, 0x52, 0x6f, 0x6f, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x52, 0x6f, 0x6f, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x49, 0x44, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07,
	0x52, 0x6f, 0x75, 0x6e, 0x64, 0x49, 0x44, 0x22, 0x87, 0x01, 0x0a, 0x03, 0x53, 0x72, 0x76, 0x12,
	0x18, 0x0a, 0x07, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x26, 0x0a, 0x0e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x53, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x24, 0x0a, 0x0d, 0x53,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0d, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x72, 0x61, 0x6e, 0x63,
	0x68, 0x22, 0x7c, 0x0a, 0x04, 0x50, 0x72, 0x6f, 0x63, 0x12, 0x1e, 0x0a, 0x0a, 0x50, 0x75, 0x62,
	0x6c, 0x69, 0x63, 0x47, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x50,
	0x75, 0x62, 0x6c, 0x69, 0x63, 0x47, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x43, 0x6f, 0x6d,
	0x6d, 0x69, 0x74, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x43, 0x6f, 0x6d,
	0x6d, 0x69, 0x74, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x42, 0x6f, 0x6f, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x42, 0x6f, 0x6f, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x22,
	0xc6, 0x01, 0x0a, 0x0a, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x20,
	0x0a, 0x0b, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x4c, 0x6f, 0x67, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x4c, 0x6f, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x42, 0x61, 0x74, 0x63, 0x68, 0x49, 0x44, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x42, 0x61, 0x74, 0x63, 0x68, 0x49, 0x44, 0x12, 0x14,
	0x0a, 0x05, 0x53, 0x65, 0x71, 0x49, 0x44, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x53,
	0x65, 0x71, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x4c, 0x6f, 0x67, 0x49, 0x44, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x4c, 0x6f, 0x67, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x72,
	0x6f, 0x63, 0x65, 0x73, 0x73, 0x49, 0x44, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x50,
	0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x49, 0x44, 0x22, 0xb9, 0x05, 0x0a, 0x03, 0x43, 0x6c, 0x69,
	0x12, 0x18, 0x0a, 0x07, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x41, 0x70,
	0x70, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x41, 0x70, 0x70, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x52, 0x65,
	0x73, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x52, 0x65, 0x73, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x50, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x26, 0x0a, 0x0e, 0x4f, 0x70, 0x72, 0x61, 0x74, 0x6f,
	0x72, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x4f, 0x70, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x16,
	0x0a, 0x06, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x49, 0x44, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x10, 0x0a, 0x03, 0x4d, 0x61, 0x63, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x4d, 0x61, 0x63, 0x12, 0x1e, 0x0a, 0x0a, 0x5a, 0x6f,
	0x6e, 0x65, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x5a, 0x6f, 0x6e, 0x65, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x49, 0x6e,
	0x74, 0x72, 0x61, 0x6e, 0x65, 0x74, 0x49, 0x50, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x49, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x65, 0x74, 0x49, 0x50, 0x12, 0x1e, 0x0a, 0x0a, 0x49, 0x6e,
	0x74, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x49, 0x50, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x49, 0x50, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x6f,
	0x6e, 0x74, 0x69, 0x6e, 0x65, 0x6e, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x43,
	0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x65, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x72, 0x79, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x41, 0x53, 0x4e, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x41, 0x53, 0x4e, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18,
	0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x1e,
	0x0a, 0x0a, 0x42, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x11, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0a, 0x42, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x1c,
	0x0a, 0x09, 0x53, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x12, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x09, 0x53, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x1a, 0x0a, 0x08,
	0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x4e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x12, 0x2a, 0x0a, 0x10, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x50, 0x72, 0x6f,
	0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x4e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20,
	0x0a, 0x0b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x16, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x17, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x41,
	0x67, 0x65, 0x6e, 0x74, 0x22, 0x6b, 0x0a, 0x03, 0x41, 0x63, 0x63, 0x12, 0x18, 0x0a, 0x07, 0x50,
	0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x50, 0x61,
	0x63, 0x6b, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x46, 0x61, 0x63, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x46, 0x61, 0x63, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x12, 0x16, 0x0a, 0x06, 0x47, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x47, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x22, 0x3a, 0x0a, 0x04, 0x55, 0x73, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x4e, 0x69, 0x63,
	0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4e, 0x69, 0x63,
	0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x22, 0xe8, 0x04,
	0x0a, 0x04, 0x43, 0x68, 0x61, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x4c, 0x6f, 0x67, 0x69, 0x6e,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x4c, 0x61, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x69,
	0x6e, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x4c, 0x61, 0x73,
	0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x4e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x50, 0x72, 0x6f,
	0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x54, 0x61, 0x67, 0x48, 0x75, 0x62,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x54, 0x61, 0x67, 0x48, 0x75, 0x62, 0x12, 0x1e,
	0x0a, 0x0a, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x44, 0x61, 0x79, 0x73, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0a, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x44, 0x61, 0x79, 0x73, 0x12, 0x2c,
	0x0a, 0x11, 0x46, 0x69, 0x72, 0x73, 0x74, 0x52, 0x65, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x46, 0x69, 0x72, 0x73, 0x74,
	0x52, 0x65, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2e, 0x0a, 0x12,
	0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x52, 0x65, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x12, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74,
	0x52, 0x65, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0d,
	0x52, 0x65, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0d, 0x52, 0x65, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x12, 0x2a, 0x0a, 0x10, 0x52, 0x65, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x43, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x52, 0x65,
	0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x2c,
	0x0a, 0x11, 0x46, 0x69, 0x72, 0x73, 0x74, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x46, 0x69, 0x72, 0x73, 0x74,
	0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2e, 0x0a, 0x12,
	0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x12, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74,
	0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0d,
	0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0d, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x12, 0x30, 0x0a, 0x13, 0x48, 0x61, 0x73, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x76,
	0x65, 0x42, 0x61, 0x6e, 0x6b, 0x72, 0x75, 0x70, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x13, 0x48, 0x61, 0x73, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x76, 0x65, 0x42, 0x61, 0x6e, 0x6b,
	0x72, 0x75, 0x70, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18,
	0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x18,
	0x0a, 0x07, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x22, 0x92, 0x01, 0x0a, 0x04, 0x42, 0x6f, 0x6f,
	0x6b, 0x12, 0x1a, 0x0a, 0x08, 0x46, 0x72, 0x65, 0x65, 0x43, 0x6f, 0x69, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x46, 0x72, 0x65, 0x65, 0x43, 0x6f, 0x69, 0x6e, 0x12, 0x20, 0x0a,
	0x0b, 0x46, 0x72, 0x65, 0x65, 0x57, 0x69, 0x6e, 0x43, 0x6f, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0b, 0x46, 0x72, 0x65, 0x65, 0x57, 0x69, 0x6e, 0x43, 0x6f, 0x69, 0x6e, 0x12,
	0x22, 0x0a, 0x0c, 0x52, 0x65, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x43, 0x6f, 0x69, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x52, 0x65, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x43,
	0x6f, 0x69, 0x6e, 0x12, 0x28, 0x0a, 0x0f, 0x52, 0x65, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x57,
	0x69, 0x6e, 0x43, 0x6f, 0x69, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x52, 0x65,
	0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x57, 0x69, 0x6e, 0x43, 0x6f, 0x69, 0x6e, 0x22, 0x99, 0x04,
	0x0a, 0x03, 0x41, 0x67, 0x67, 0x12, 0x20, 0x0a, 0x0b, 0x49, 0x6e, 0x63, 0x46, 0x72, 0x65, 0x65,
	0x43, 0x6f, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x49, 0x6e, 0x63, 0x46,
	0x72, 0x65, 0x65, 0x43, 0x6f, 0x69, 0x6e, 0x12, 0x26, 0x0a, 0x0e, 0x49, 0x6e, 0x63, 0x46, 0x72,
	0x65, 0x65, 0x57, 0x69, 0x6e, 0x43, 0x6f, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0e, 0x49, 0x6e, 0x63, 0x46, 0x72, 0x65, 0x65, 0x57, 0x69, 0x6e, 0x43, 0x6f, 0x69, 0x6e, 0x12,
	0x28, 0x0a, 0x0f, 0x49, 0x6e, 0x63, 0x52, 0x65, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x43, 0x6f,
	0x69, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x49, 0x6e, 0x63, 0x52, 0x65, 0x63,
	0x68, 0x61, 0x72, 0x67, 0x65, 0x43, 0x6f, 0x69, 0x6e, 0x12, 0x2e, 0x0a, 0x12, 0x49, 0x6e, 0x63,
	0x52, 0x65, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x57, 0x69, 0x6e, 0x43, 0x6f, 0x69, 0x6e, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x12, 0x49, 0x6e, 0x63, 0x52, 0x65, 0x63, 0x68, 0x61, 0x72,
	0x67, 0x65, 0x57, 0x69, 0x6e, 0x43, 0x6f, 0x69, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x44, 0x65, 0x63,
	0x46, 0x72, 0x65, 0x65, 0x43, 0x6f, 0x69, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b,
	0x44, 0x65, 0x63, 0x46, 0x72, 0x65, 0x65, 0x43, 0x6f, 0x69, 0x6e, 0x12, 0x26, 0x0a, 0x0e, 0x44,
	0x65, 0x63, 0x46, 0x72, 0x65, 0x65, 0x57, 0x69, 0x6e, 0x43, 0x6f, 0x69, 0x6e, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0e, 0x44, 0x65, 0x63, 0x46, 0x72, 0x65, 0x65, 0x57, 0x69, 0x6e, 0x43,
	0x6f, 0x69, 0x6e, 0x12, 0x28, 0x0a, 0x0f, 0x44, 0x65, 0x63, 0x52, 0x65, 0x63, 0x68, 0x61, 0x72,
	0x67, 0x65, 0x43, 0x6f, 0x69, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x44, 0x65,
	0x63, 0x52, 0x65, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x43, 0x6f, 0x69, 0x6e, 0x12, 0x2e, 0x0a,
	0x12, 0x44, 0x65, 0x63, 0x52, 0x65, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x57, 0x69, 0x6e, 0x43,
	0x6f, 0x69, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x12, 0x44, 0x65, 0x63, 0x52, 0x65,
	0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x57, 0x69, 0x6e, 0x43, 0x6f, 0x69, 0x6e, 0x12, 0x2a, 0x0a,
	0x10, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x46, 0x72, 0x65, 0x65, 0x43, 0x6f, 0x69,
	0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61,
	0x77, 0x46, 0x72, 0x65, 0x65, 0x43, 0x6f, 0x69, 0x6e, 0x12, 0x32, 0x0a, 0x14, 0x57, 0x69, 0x74,
	0x68, 0x64, 0x72, 0x61, 0x77, 0x52, 0x65, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x43, 0x6f, 0x69,
	0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x14, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61,
	0x77, 0x52, 0x65, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x43, 0x6f, 0x69, 0x6e, 0x12, 0x30, 0x0a,
	0x13, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x46, 0x72, 0x65, 0x65, 0x57, 0x69, 0x6e,
	0x43, 0x6f, 0x69, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x13, 0x57, 0x69, 0x74, 0x68,
	0x64, 0x72, 0x61, 0x77, 0x46, 0x72, 0x65, 0x65, 0x57, 0x69, 0x6e, 0x43, 0x6f, 0x69, 0x6e, 0x12,
	0x38, 0x0a, 0x17, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x52, 0x65, 0x63, 0x68, 0x61,
	0x72, 0x67, 0x65, 0x57, 0x69, 0x6e, 0x43, 0x6f, 0x69, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x17, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x52, 0x65, 0x63, 0x68, 0x61, 0x72,
	0x67, 0x65, 0x57, 0x69, 0x6e, 0x43, 0x6f, 0x69, 0x6e, 0x22, 0xa2, 0x02, 0x0a, 0x08, 0x47, 0x61,
	0x6d, 0x65, 0x53, 0x6f, 0x72, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x47, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x47, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x47, 0x61,
	0x6d, 0x65, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x47, 0x61, 0x6d, 0x65,
	0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x53, 0x6f, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x04, 0x53, 0x6f, 0x72, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x46, 0x6c,
	0x61, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x12,
	0x0a, 0x04, 0x49, 0x63, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x49, 0x63,
	0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x04, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x4a, 0x61, 0x63, 0x6b, 0x70, 0x6f,
	0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x4a, 0x61, 0x63, 0x6b, 0x70, 0x6f, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x06, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x12, 0x1a, 0x0a, 0x08, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x4d, 0x69, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x4d, 0x69, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x4d, 0x61, 0x78,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x4d, 0x61, 0x78,
	0x12, 0x1c, 0x0a, 0x09, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x44, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x44, 0x22, 0x4a,
	0x0a, 0x06, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x47, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x47, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x57, 0x69, 0x6e, 0x43, 0x6f, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x57,
	0x69, 0x6e, 0x43, 0x6f, 0x69, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x43, 0x6f, 0x69, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x43, 0x6f, 0x69, 0x6e, 0x22, 0x7c, 0x0a, 0x0b, 0x41, 0x77,
	0x61, 0x72, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x14, 0x0a, 0x05, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x41, 0x64, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x41, 0x64, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x25, 0x0a, 0x08, 0x50, 0x72, 0x6f, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x63, 0x6c, 0x69, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x52, 0x08,
	0x50, 0x72, 0x6f, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x9b, 0x01, 0x0a, 0x0f, 0x53, 0x69, 0x67,
	0x6e, 0x69, 0x6e, 0x41, 0x77, 0x61, 0x72, 0x64, 0x44, 0x61, 0x74, 0x61, 0x12, 0x2e, 0x0a, 0x09,
	0x44, 0x61, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x10, 0x2e, 0x63, 0x6c, 0x69, 0x2e, 0x41, 0x77, 0x61, 0x72, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x09, 0x44, 0x61, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2e, 0x0a, 0x12,
	0x4e, 0x65, 0x78, 0x74, 0x41, 0x77, 0x61, 0x72, 0x64, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x12, 0x4e, 0x65, 0x78, 0x74, 0x41, 0x77,
	0x61, 0x72, 0x64, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x0f,
	0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x45,
	0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x76, 0x0a, 0x14, 0x41, 0x64, 0x64, 0x55, 0x70, 0x53,
	0x69, 0x67, 0x6e, 0x69, 0x6e, 0x41, 0x77, 0x61, 0x72, 0x64, 0x44, 0x61, 0x74, 0x61, 0x12, 0x2e,
	0x0a, 0x09, 0x44, 0x61, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x10, 0x2e, 0x63, 0x6c, 0x69, 0x2e, 0x41, 0x77, 0x61, 0x72, 0x64, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x09, 0x44, 0x61, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2e,
	0x0a, 0x12, 0x4e, 0x65, 0x78, 0x74, 0x41, 0x77, 0x61, 0x72, 0x64, 0x53, 0x74, 0x61, 0x72, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x12, 0x4e, 0x65, 0x78, 0x74,
	0x41, 0x77, 0x61, 0x72, 0x64, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x7f,
	0x0a, 0x0d, 0x53, 0x68, 0x6f, 0x70, 0x41, 0x64, 0x64, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x1e, 0x0a, 0x0a, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0a, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x12,
	0x24, 0x0a, 0x0d, 0x52, 0x65, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x52, 0x65, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x12, 0x28, 0x0a, 0x0f, 0x4e, 0x65, 0x78, 0x74, 0x52, 0x65, 0x66,
	0x72, 0x65, 0x73, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f,
	0x4e, 0x65, 0x78, 0x74, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x22,
	0x90, 0x01, 0x0a, 0x08, 0x4d, 0x61, 0x69, 0x6c, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05,
	0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x54, 0x69, 0x74,
	0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07,
	0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x45,
	0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x65, 0x61, 0x64, 0x65, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x52, 0x65, 0x61, 0x64, 0x65, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x43, 0x6f, 0x69, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x43, 0x6f,
	0x69, 0x6e, 0x22, 0x3a, 0x0a, 0x0c, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x49, 0x74,
	0x65, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x4c, 0x69, 0x6e, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x16, 0x0a, 0x06, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x22, 0x8d,
	0x01, 0x0a, 0x0d, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x4c, 0x69, 0x6d, 0x69, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x44,
	0x12, 0x14, 0x0a, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x43, 0x6f, 0x6d, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x4d, 0x69, 0x6e, 0x4c, 0x69, 0x6d,
	0x69, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x4d, 0x69, 0x6e, 0x4c, 0x69, 0x6d,
	0x69, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x4d, 0x61, 0x78, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x4d, 0x61, 0x78, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x3d,
	0x0a, 0x09, 0x52, 0x65, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x22, 0xab, 0x02,
	0x0a, 0x08, 0x53, 0x68, 0x6f, 0x70, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x18, 0x0a, 0x07, 0x47, 0x6f,
	0x6f, 0x64, 0x73, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x47, 0x6f, 0x6f,
	0x64, 0x73, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x49,
	0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65,
	0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44,
	0x12, 0x18, 0x0a, 0x07, 0x50, 0x61, 0x79, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x50, 0x61, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x50, 0x61,
	0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x50, 0x61, 0x79, 0x12, 0x1e, 0x0a, 0x0a,
	0x52, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x50, 0x61, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0a, 0x52, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x50, 0x61, 0x79, 0x12, 0x20, 0x0a, 0x0b,
	0x52, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x46, 0x72, 0x65, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0b, 0x52, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x46, 0x72, 0x65, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x53,
	0x63, 0x65, 0x6e, 0x65, 0x12, 0x25, 0x0a, 0x08, 0x50, 0x72, 0x6f, 0x70, 0x4c, 0x69, 0x73, 0x74,
	0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x63, 0x6c, 0x69, 0x2e, 0x50, 0x72, 0x6f,
	0x70, 0x52, 0x08, 0x50, 0x72, 0x6f, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x44,
	0x61, 0x69, 0x6c, 0x79, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0a, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x48, 0x0a, 0x07, 0x50,
	0x61, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x29, 0x0a, 0x08, 0x49, 0x74,
	0x65, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63,
	0x6c, 0x69, 0x2e, 0x53, 0x68, 0x6f, 0x70, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x08, 0x49, 0x74, 0x65,
	0x6d, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x92, 0x01, 0x0a, 0x04, 0x43, 0x6f, 0x69, 0x6e, 0x12, 0x1a,
	0x0a, 0x08, 0x46, 0x72, 0x65, 0x65, 0x43, 0x6f, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x46, 0x72, 0x65, 0x65, 0x43, 0x6f, 0x69, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x46, 0x72,
	0x65, 0x65, 0x57, 0x69, 0x6e, 0x43, 0x6f, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0b, 0x46, 0x72, 0x65, 0x65, 0x57, 0x69, 0x6e, 0x43, 0x6f, 0x69, 0x6e, 0x12, 0x22, 0x0a, 0x0c,
	0x52, 0x65, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x43, 0x6f, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0c, 0x52, 0x65, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x43, 0x6f, 0x69, 0x6e,
	0x12, 0x28, 0x0a, 0x0f, 0x52, 0x65, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x57, 0x69, 0x6e, 0x43,
	0x6f, 0x69, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x52, 0x65, 0x63, 0x68, 0x61,
	0x72, 0x67, 0x65, 0x57, 0x69, 0x6e, 0x43, 0x6f, 0x69, 0x6e, 0x22, 0x9e, 0x01, 0x0a, 0x0e, 0x53,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x12, 0x10, 0x0a,
	0x03, 0x55, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x55, 0x49, 0x44, 0x12,
	0x12, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x1a, 0x0a, 0x03, 0x43, 0x6c, 0x69, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x63,
	0x6c, 0x69, 0x2e, 0x43, 0x6c, 0x69, 0x52, 0x03, 0x43, 0x6c, 0x69, 0x22, 0xbb, 0x02, 0x0a, 0x0a,
	0x4c, 0x6f, 0x67, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x12, 0x2f, 0x0a, 0x0a, 0x49, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f,
	0x2e, 0x63, 0x6c, 0x69, 0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52,
	0x0a, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x04, 0x47,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x63, 0x6c, 0x69, 0x2e,
	0x47, 0x61, 0x6d, 0x65, 0x52, 0x04, 0x47, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x03, 0x53, 0x72,
	0x76, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x63, 0x6c, 0x69, 0x2e, 0x53, 0x72,
	0x76, 0x52, 0x03, 0x53, 0x72, 0x76, 0x12, 0x10, 0x0a, 0x03, 0x55, 0x49, 0x44, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x03, 0x55, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x03, 0x43, 0x6c, 0x69, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x63, 0x6c, 0x69, 0x2e, 0x43, 0x6c, 0x69, 0x52,
	0x03, 0x43, 0x6c, 0x69, 0x12, 0x1a, 0x0a, 0x03, 0x41, 0x63, 0x63, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x08, 0x2e, 0x63, 0x6c, 0x69, 0x2e, 0x41, 0x63, 0x63, 0x52, 0x03, 0x41, 0x63, 0x63,
	0x12, 0x1d, 0x0a, 0x04, 0x55, 0x73, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09,
	0x2e, 0x63, 0x6c, 0x69, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x55, 0x73, 0x65, 0x72, 0x12,
	0x1d, 0x0a, 0x04, 0x43, 0x68, 0x61, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e,
	0x63, 0x6c, 0x69, 0x2e, 0x43, 0x68, 0x61, 0x72, 0x52, 0x04, 0x43, 0x68, 0x61, 0x72, 0x12, 0x1d,
	0x0a, 0x04, 0x42, 0x6f, 0x6f, 0x6b, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x63,
	0x6c, 0x69, 0x2e, 0x42, 0x6f, 0x6f, 0x6b, 0x52, 0x04, 0x42, 0x6f, 0x6f, 0x6b, 0x12, 0x1a, 0x0a,
	0x03, 0x41, 0x67, 0x67, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x63, 0x6c, 0x69,
	0x2e, 0x41, 0x67, 0x67, 0x52, 0x03, 0x41, 0x67, 0x67, 0x22, 0x96, 0x01, 0x0a, 0x08, 0x4d, 0x61,
	0x69, 0x6c, 0x43, 0x6f, 0x69, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x46, 0x72, 0x65, 0x65, 0x43, 0x6f,
	0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x46, 0x72, 0x65, 0x65, 0x43, 0x6f,
	0x69, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x46, 0x72, 0x65, 0x65, 0x57, 0x69, 0x6e, 0x43, 0x6f, 0x69,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x46, 0x72, 0x65, 0x65, 0x57, 0x69, 0x6e,
	0x43, 0x6f, 0x69, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x52, 0x65, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65,
	0x43, 0x6f, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x52, 0x65, 0x63, 0x68,
	0x61, 0x72, 0x67, 0x65, 0x43, 0x6f, 0x69, 0x6e, 0x12, 0x28, 0x0a, 0x0f, 0x52, 0x65, 0x63, 0x68,
	0x61, 0x72, 0x67, 0x65, 0x57, 0x69, 0x6e, 0x43, 0x6f, 0x69, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0f, 0x52, 0x65, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x57, 0x69, 0x6e, 0x43, 0x6f,
	0x69, 0x6e, 0x22, 0xa3, 0x02, 0x0a, 0x04, 0x4d, 0x61, 0x69, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x41, 0x70,
	0x70, 0x65, 0x6e, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x54, 0x69, 0x74, 0x6c,
	0x65, 0x41, 0x70, 0x70, 0x65, 0x6e, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x12, 0x21, 0x0a, 0x04, 0x50, 0x72, 0x6f, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0d, 0x2e, 0x63, 0x6c, 0x69, 0x2e, 0x4d, 0x61, 0x69, 0x6c, 0x43, 0x6f, 0x69, 0x6e, 0x52, 0x04,
	0x50, 0x72, 0x6f, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x46, 0x72, 0x6f, 0x6d, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x4c, 0x69, 0x66, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x4c, 0x69, 0x66, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x65, 0x61, 0x64, 0x65, 0x64, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x52, 0x65, 0x61, 0x64, 0x65, 0x64, 0x12, 0x1a, 0x0a, 0x08,
	0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08,
	0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x22, 0x8c, 0x01, 0x0a, 0x0a, 0x43, 0x6f, 0x69,
	0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x69, 0x70, 0x6f, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x54, 0x69, 0x70, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x51,
	0x75, 0x61, 0x6e, 0x74, 0x69, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x51, 0x75,
	0x61, 0x6e, 0x74, 0x69, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x65, 0x6d, 0x70, 0x6f, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x54, 0x65, 0x6d, 0x70, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x46, 0x0a, 0x0c, 0x53, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x53, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x49, 0x73, 0x4f, 0x70, 0x65,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x49, 0x73, 0x4f, 0x70, 0x65, 0x6e, 0x22,
	0x95, 0x02, 0x0a, 0x07, 0x55, 0x73, 0x65, 0x72, 0x54, 0x61, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x54,
	0x61, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x54, 0x61, 0x67, 0x12, 0x18, 0x0a,
	0x07, 0x50, 0x69, 0x78, 0x53, 0x68, 0x6f, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x50, 0x69, 0x78, 0x53, 0x68, 0x6f, 0x70, 0x12, 0x22, 0x0a, 0x0c, 0x53, 0x70, 0x65, 0x63, 0x69,
	0x61, 0x6c, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x53,
	0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x4d,
	0x6f, 0x6e, 0x65, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0a, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x57,
	0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x57,
	0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x12, 0x28, 0x0a, 0x0f, 0x46, 0x62, 0x49, 0x63, 0x6f,
	0x6e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0f, 0x46, 0x62, 0x49, 0x63, 0x6f, 0x6e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x06, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x42, 0x72, 0x6f,
	0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x42, 0x72,
	0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x47, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x53, 0x68, 0x6f, 0x70, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x47, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x53, 0x68, 0x6f, 0x70, 0x22, 0x31, 0x0a, 0x09, 0x42, 0x6f, 0x6e, 0x75, 0x73,
	0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x22, 0x52, 0x0a, 0x16, 0x4f, 0x6e,
	0x6c, 0x69, 0x6e, 0x65, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x44, 0x65, 0x61, 0x6c, 0x73, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x1c, 0x0a, 0x09, 0x52, 0x65, 0x73, 0x65, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x52, 0x65, 0x73, 0x65, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x53,
	0x0a, 0x17, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x57, 0x65, 0x65, 0x6b, 0x6c, 0x79, 0x44, 0x65,
	0x61, 0x6c, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x44, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x44, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x52, 0x65, 0x73, 0x65, 0x74, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x52, 0x65, 0x73, 0x65, 0x74, 0x54,
	0x69, 0x6d, 0x65, 0x22, 0x5c, 0x0a, 0x0c, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x61,
	0x74, 0x69, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x4d, 0x69, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x4d, 0x69, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x1a, 0x0a, 0x08, 0x4d, 0x61, 0x78, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x4d, 0x61, 0x78, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x52,
	0x61, 0x74, 0x69, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x52, 0x61, 0x74, 0x69,
	0x6f, 0x22, 0xf7, 0x06, 0x0a, 0x0a, 0x48, 0x61, 0x6c, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x12, 0x2c, 0x0a, 0x09, 0x52, 0x65, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x63, 0x6c, 0x69, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x52, 0x09, 0x52, 0x65, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x12, 0x2c,
	0x0a, 0x09, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0e, 0x2e, 0x63, 0x6c, 0x69, 0x2e, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61,
	0x74, 0x52, 0x09, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x12, 0x2b, 0x0a, 0x09,
	0x47, 0x61, 0x6d, 0x65, 0x53, 0x6f, 0x72, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0d, 0x2e, 0x63, 0x6c, 0x69, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x6f, 0x72, 0x74, 0x52, 0x09,
	0x47, 0x61, 0x6d, 0x65, 0x53, 0x6f, 0x72, 0x74, 0x73, 0x12, 0x35, 0x0a, 0x0c, 0x53, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x63, 0x6c, 0x69, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x53, 0x77, 0x69, 0x74,
	0x63, 0x68, 0x52, 0x0c, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68,
	0x12, 0x28, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x54, 0x61, 0x67, 0x73, 0x18, 0x05, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x6c, 0x69, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x54, 0x61, 0x67,
	0x52, 0x08, 0x55, 0x73, 0x65, 0x72, 0x54, 0x61, 0x67, 0x73, 0x12, 0x2b, 0x0a, 0x09, 0x53, 0x68,
	0x6f, 0x70, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e,
	0x63, 0x6c, 0x69, 0x2e, 0x53, 0x68, 0x6f, 0x70, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x09, 0x53, 0x68,
	0x6f, 0x70, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x3a, 0x0a, 0x0e, 0x57, 0x69, 0x74, 0x68, 0x64,
	0x72, 0x61, 0x77, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x63, 0x6c, 0x69, 0x2e, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x4c, 0x69,
	0x6d, 0x69, 0x74, 0x52, 0x0e, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x4c, 0x69, 0x6d,
	0x69, 0x74, 0x73, 0x12, 0x2a, 0x0a, 0x10, 0x46, 0x61, 0x63, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x42,
	0x69, 0x6e, 0x64, 0x43, 0x6f, 0x69, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x46,
	0x61, 0x63, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x42, 0x69, 0x6e, 0x64, 0x43, 0x6f, 0x69, 0x6e, 0x12,
	0x16, 0x0a, 0x06, 0x54, 0x61, 0x67, 0x48, 0x75, 0x62, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x54, 0x61, 0x67, 0x48, 0x75, 0x62, 0x12, 0x2e, 0x0a, 0x0a, 0x42, 0x6f, 0x6e, 0x75, 0x73,
	0x49, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x63, 0x6c,
	0x69, 0x2e, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x0a, 0x42, 0x6f, 0x6e,
	0x75, 0x73, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x47, 0x0a, 0x10, 0x44, 0x61, 0x69, 0x6c, 0x79,
	0x44, 0x65, 0x61, 0x6c, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1b, 0x2e, 0x63, 0x6c, 0x69, 0x2e, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x44, 0x61,
	0x69, 0x6c, 0x79, 0x44, 0x65, 0x61, 0x6c, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x10,
	0x44, 0x61, 0x69, 0x6c, 0x79, 0x44, 0x65, 0x61, 0x6c, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x12, 0x4a, 0x0a, 0x11, 0x57, 0x65, 0x65, 0x6b, 0x6c, 0x79, 0x44, 0x65, 0x61, 0x6c, 0x73, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x63, 0x6c,
	0x69, 0x2e, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x57, 0x65, 0x65, 0x6b, 0x6c, 0x79, 0x44, 0x65,
	0x61, 0x6c, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x11, 0x57, 0x65, 0x65, 0x6b, 0x6c,
	0x79, 0x44, 0x65, 0x61, 0x6c, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1c, 0x0a, 0x09,
	0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x55, 0x52, 0x4c, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x55, 0x52, 0x4c, 0x12, 0x2a, 0x0a, 0x10, 0x50, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x43, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x12, 0x2c, 0x0a, 0x11, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61,
	0x6c, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x46, 0x42, 0x18, 0x0f, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x11, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x65, 0x72, 0x46, 0x42, 0x12, 0x2c, 0x0a, 0x11, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x43,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x54, 0x47, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x11, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x54, 0x47, 0x12, 0x2c, 0x0a, 0x11, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x43, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x57, 0x53, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x53,
	0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x57, 0x53,
	0x12, 0x39, 0x0a, 0x0e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x50, 0x61, 0x79, 0x52, 0x61, 0x69,
	0x6f, 0x73, 0x18, 0x12, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6c, 0x69, 0x2e, 0x50,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x61, 0x74, 0x69, 0x6f, 0x52, 0x0e, 0x43, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x50, 0x61, 0x79, 0x52, 0x61, 0x69, 0x6f, 0x73, 0x22, 0x41, 0x0a, 0x09, 0x48,
	0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x76, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x76, 0x61, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x22, 0x3a,
	0x0a, 0x10, 0x52, 0x61, 0x6e, 0x64, 0x78, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x49, 0x74,
	0x65, 0x6d, 0x12, 0x10, 0x0a, 0x03, 0x54, 0x61, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x54, 0x61, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x22, 0x3b, 0x0a, 0x0c, 0x52, 0x61,
	0x6e, 0x64, 0x78, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x12, 0x2b, 0x0a, 0x05, 0x49, 0x74,
	0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x6c, 0x69, 0x2e,
	0x52, 0x61, 0x6e, 0x64, 0x78, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x49, 0x74, 0x65, 0x6d,
	0x52, 0x05, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x22, 0xee, 0x01, 0x0a, 0x0e, 0x47, 0x61, 0x6d, 0x65,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x47, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x47, 0x61, 0x6d, 0x65, 0x12, 0x2e,
	0x0a, 0x12, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x52, 0x65, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x4c,
	0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x12, 0x45, 0x6e, 0x74, 0x65,
	0x72, 0x52, 0x65, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x28,
	0x0a, 0x0f, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x43, 0x61, 0x72, 0x72, 0x79, 0x4c, 0x69, 0x6d, 0x69,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x43, 0x61,
	0x72, 0x72, 0x79, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x2a, 0x0a, 0x10, 0x42, 0x65, 0x74, 0x52,
	0x65, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x10, 0x42, 0x65, 0x74, 0x52, 0x65, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x4c,
	0x69, 0x6d, 0x69, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x42, 0x65, 0x74, 0x43, 0x61, 0x72, 0x72, 0x79,
	0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x42, 0x65, 0x74,
	0x43, 0x61, 0x72, 0x72, 0x79, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x57, 0x69,
	0x6e, 0x41, 0x74, 0x4d, 0x6f, 0x73, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x57,
	0x69, 0x6e, 0x41, 0x74, 0x4d, 0x6f, 0x73, 0x74, 0x22, 0x71, 0x0a, 0x11, 0x50, 0x61, 0x79, 0x54,
	0x79, 0x70, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a,
	0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x44, 0x12, 0x26, 0x0a,
	0x0e, 0x52, 0x65, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x03, 0x52, 0x0e, 0x52, 0x65, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x41,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x42, 0x65, 0x74, 0x43, 0x61, 0x72, 0x72,
	0x79, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x42, 0x65,
	0x74, 0x43, 0x61, 0x72, 0x72, 0x79, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x96, 0x01, 0x0a, 0x0d,
	0x4f, 0x70, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x3d, 0x0a,
	0x0f, 0x47, 0x61, 0x6d, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x74, 0x65, 0x6d, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x63, 0x6c, 0x69, 0x2e, 0x47, 0x61, 0x6d,
	0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x0f, 0x47, 0x61, 0x6d,
	0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x46, 0x0a, 0x12,
	0x50, 0x61, 0x79, 0x54, 0x79, 0x70, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x74, 0x65,
	0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63, 0x6c, 0x69, 0x2e, 0x50,
	0x61, 0x79, 0x54, 0x79, 0x70, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x74, 0x65, 0x6d,
	0x52, 0x12, 0x50, 0x61, 0x79, 0x54, 0x79, 0x70, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49,
	0x74, 0x65, 0x6d, 0x73, 0x22, 0x6e, 0x0a, 0x0e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x06, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x1a,
	0x0a, 0x08, 0x4c, 0x61, 0x63, 0x6b, 0x43, 0x6f, 0x69, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x08, 0x4c, 0x61, 0x63, 0x6b, 0x43, 0x6f, 0x69, 0x6e, 0x12, 0x28, 0x0a, 0x0f, 0x45, 0x78,
	0x70, 0x65, 0x63, 0x74, 0x65, 0x64, 0x57, 0x69, 0x6e, 0x43, 0x6f, 0x69, 0x6e, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0f, 0x45, 0x78, 0x70, 0x65, 0x63, 0x74, 0x65, 0x64, 0x57, 0x69, 0x6e,
	0x43, 0x6f, 0x69, 0x6e, 0x22, 0xb2, 0x01, 0x0a, 0x04, 0x50, 0x72, 0x6f, 0x70, 0x12, 0x12, 0x0a,
	0x04, 0x4b, 0x69, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x4b, 0x69, 0x6e,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x55,
	0x73, 0x61, 0x62, 0x6c, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0b, 0x55, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x12, 0x1e, 0x0a,
	0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x4c, 0x69, 0x66, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x4c, 0x69, 0x66, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x42, 0x08, 0x5a, 0x06, 0x70, 0x62, 0x2f,
	0x63, 0x6c, 0x69, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_structs_proto_rawDescOnce sync.Once
	file_structs_proto_rawDescData = file_structs_proto_rawDesc
)

func file_structs_proto_rawDescGZIP() []byte {
	file_structs_proto_rawDescOnce.Do(func() {
		file_structs_proto_rawDescData = protoimpl.X.CompressGZIP(file_structs_proto_rawDescData)
	})
	return file_structs_proto_rawDescData
}

var file_structs_proto_msgTypes = make([]protoimpl.MessageInfo, 43)
var file_structs_proto_goTypes = []interface{}{
	(*Game)(nil),                    // 0: cli.Game
	(*Srv)(nil),                     // 1: cli.Srv
	(*Proc)(nil),                    // 2: cli.Proc
	(*Identifier)(nil),              // 3: cli.Identifier
	(*Cli)(nil),                     // 4: cli.Cli
	(*Acc)(nil),                     // 5: cli.Acc
	(*User)(nil),                    // 6: cli.User
	(*Char)(nil),                    // 7: cli.Char
	(*Book)(nil),                    // 8: cli.Book
	(*Agg)(nil),                     // 9: cli.Agg
	(*GameSort)(nil),                // 10: cli.GameSort
	(*Settle)(nil),                  // 11: cli.Settle
	(*AwardStatus)(nil),             // 12: cli.AwardStatus
	(*SigninAwardData)(nil),         // 13: cli.SigninAwardData
	(*AddUpSigninAwardData)(nil),    // 14: cli.AddUpSigninAwardData
	(*ShopAdderData)(nil),           // 15: cli.ShopAdderData
	(*MailItem)(nil),                // 16: cli.MailItem
	(*CustomerItem)(nil),            // 17: cli.CustomerItem
	(*WithdrawLimit)(nil),           // 18: cli.WithdrawLimit
	(*Reconnect)(nil),               // 19: cli.Reconnect
	(*ShopItem)(nil),                // 20: cli.ShopItem
	(*PayType)(nil),                 // 21: cli.PayType
	(*Coin)(nil),                    // 22: cli.Coin
	(*SessionContext)(nil),          // 23: cli.SessionContext
	(*LogContext)(nil),              // 24: cli.LogContext
	(*MailCoin)(nil),                // 25: cli.MailCoin
	(*Mail)(nil),                    // 26: cli.Mail
	(*CoinRecord)(nil),              // 27: cli.CoinRecord
	(*SystemSwitch)(nil),            // 28: cli.SystemSwitch
	(*UserTag)(nil),                 // 29: cli.UserTag
	(*BonusItem)(nil),               // 30: cli.BonusItem
	(*OnlineDailyDealsConfig)(nil),  // 31: cli.OnlineDailyDealsConfig
	(*OnlineWeeklyDealsConfig)(nil), // 32: cli.OnlineWeeklyDealsConfig
	(*PaymentRatio)(nil),            // 33: cli.PaymentRatio
	(*HallConfig)(nil),              // 34: cli.HallConfig
	(*Heartbeat)(nil),               // 35: cli.Heartbeat
	(*RandxTrackerItem)(nil),        // 36: cli.RandxTrackerItem
	(*RandxTracker)(nil),            // 37: cli.RandxTracker
	(*GameConfigItem)(nil),          // 38: cli.GameConfigItem
	(*PayTypeConfigItem)(nil),       // 39: cli.PayTypeConfigItem
	(*OptGameConfig)(nil),           // 40: cli.OptGameConfig
	(*RecorderResult)(nil),          // 41: cli.RecorderResult
	(*Prop)(nil),                    // 42: cli.Prop
}
var file_structs_proto_depIdxs = []int32{
	42, // 0: cli.AwardStatus.PropList:type_name -> cli.Prop
	12, // 1: cli.SigninAwardData.DayStatus:type_name -> cli.AwardStatus
	12, // 2: cli.AddUpSigninAwardData.DayStatus:type_name -> cli.AwardStatus
	42, // 3: cli.ShopItem.PropList:type_name -> cli.Prop
	20, // 4: cli.PayType.ItemList:type_name -> cli.ShopItem
	4,  // 5: cli.SessionContext.Cli:type_name -> cli.Cli
	3,  // 6: cli.LogContext.Identifier:type_name -> cli.Identifier
	0,  // 7: cli.LogContext.Game:type_name -> cli.Game
	1,  // 8: cli.LogContext.Srv:type_name -> cli.Srv
	4,  // 9: cli.LogContext.Cli:type_name -> cli.Cli
	5,  // 10: cli.LogContext.Acc:type_name -> cli.Acc
	6,  // 11: cli.LogContext.User:type_name -> cli.User
	7,  // 12: cli.LogContext.Char:type_name -> cli.Char
	8,  // 13: cli.LogContext.Book:type_name -> cli.Book
	9,  // 14: cli.LogContext.Agg:type_name -> cli.Agg
	25, // 15: cli.Mail.Prop:type_name -> cli.MailCoin
	19, // 16: cli.HallConfig.Reconnect:type_name -> cli.Reconnect
	35, // 17: cli.HallConfig.Heartbeat:type_name -> cli.Heartbeat
	10, // 18: cli.HallConfig.GameSorts:type_name -> cli.GameSort
	28, // 19: cli.HallConfig.SystemSwitch:type_name -> cli.SystemSwitch
	29, // 20: cli.HallConfig.UserTags:type_name -> cli.UserTag
	20, // 21: cli.HallConfig.ShopItems:type_name -> cli.ShopItem
	18, // 22: cli.HallConfig.WithdrawLimits:type_name -> cli.WithdrawLimit
	30, // 23: cli.HallConfig.BonusItems:type_name -> cli.BonusItem
	31, // 24: cli.HallConfig.DailyDealsConfig:type_name -> cli.OnlineDailyDealsConfig
	32, // 25: cli.HallConfig.WeeklyDealsConfig:type_name -> cli.OnlineWeeklyDealsConfig
	33, // 26: cli.HallConfig.CustomPayRaios:type_name -> cli.PaymentRatio
	36, // 27: cli.RandxTracker.Items:type_name -> cli.RandxTrackerItem
	38, // 28: cli.OptGameConfig.GameConfigItems:type_name -> cli.GameConfigItem
	39, // 29: cli.OptGameConfig.PayTypeConfigItems:type_name -> cli.PayTypeConfigItem
	30, // [30:30] is the sub-list for method output_type
	30, // [30:30] is the sub-list for method input_type
	30, // [30:30] is the sub-list for extension type_name
	30, // [30:30] is the sub-list for extension extendee
	0,  // [0:30] is the sub-list for field type_name
}

func init() { file_structs_proto_init() }
func file_structs_proto_init() {
	if File_structs_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_structs_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Game); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_structs_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Srv); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_structs_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Proc); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_structs_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Identifier); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_structs_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cli); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_structs_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Acc); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_structs_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*User); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_structs_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Char); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_structs_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Book); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_structs_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Agg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_structs_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameSort); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_structs_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Settle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_structs_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AwardStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_structs_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SigninAwardData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_structs_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddUpSigninAwardData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_structs_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShopAdderData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_structs_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MailItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_structs_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CustomerItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_structs_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WithdrawLimit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_structs_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Reconnect); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_structs_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShopItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_structs_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PayType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_structs_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Coin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_structs_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SessionContext); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_structs_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogContext); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_structs_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MailCoin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_structs_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Mail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_structs_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CoinRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_structs_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemSwitch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_structs_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserTag); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_structs_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BonusItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_structs_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OnlineDailyDealsConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_structs_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OnlineWeeklyDealsConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_structs_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaymentRatio); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_structs_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HallConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_structs_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Heartbeat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_structs_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RandxTrackerItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_structs_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RandxTracker); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_structs_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameConfigItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_structs_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PayTypeConfigItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_structs_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OptGameConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_structs_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecorderResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_structs_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Prop); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_structs_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   43,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_structs_proto_goTypes,
		DependencyIndexes: file_structs_proto_depIdxs,
		MessageInfos:      file_structs_proto_msgTypes,
	}.Build()
	File_structs_proto = out.File
	file_structs_proto_rawDesc = nil
	file_structs_proto_goTypes = nil
	file_structs_proto_depIdxs = nil
}
