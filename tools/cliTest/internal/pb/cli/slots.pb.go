// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v4.25.0
// source: slots.proto

package cli

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SlotsEnterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UID   int64  `protobuf:"varint,1,opt,name=UID,proto3" json:"UID,omitempty"`
	Token string `protobuf:"bytes,2,opt,name=Token,proto3" json:"Token,omitempty"`
	Theme string `protobuf:"bytes,3,opt,name=Theme,proto3" json:"Theme,omitempty"`
}

func (x *SlotsEnterRequest) Reset() {
	*x = SlotsEnterRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_slots_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SlotsEnterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SlotsEnterRequest) ProtoMessage() {}

func (x *SlotsEnterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_slots_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SlotsEnterRequest.ProtoReflect.Descriptor instead.
func (*SlotsEnterRequest) Descriptor() ([]byte, []int) {
	return file_slots_proto_rawDescGZIP(), []int{0}
}

func (x *SlotsEnterRequest) GetUID() int64 {
	if x != nil {
		return x.UID
	}
	return 0
}

func (x *SlotsEnterRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *SlotsEnterRequest) GetTheme() string {
	if x != nil {
		return x.Theme
	}
	return ""
}

type SlotsEnterResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"Code"
	Code           int64         `protobuf:"varint,1,opt,name=Code,proto3" json:"Code,omitempty"`
	NodeTree       *LiteNodeTree `protobuf:"bytes,2,opt,name=NodeTree,proto3" json:"NodeTree,omitempty"`
	Coin           int64         `protobuf:"varint,3,opt,name=Coin,proto3" json:"Coin,omitempty"`
	BetIndex       int64         `protobuf:"varint,4,opt,name=BetIndex,proto3" json:"BetIndex,omitempty"`
	CoinValueIndex int64         `protobuf:"varint,5,opt,name=CoinValueIndex,proto3" json:"CoinValueIndex,omitempty"`
}

func (x *SlotsEnterResponse) Reset() {
	*x = SlotsEnterResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_slots_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SlotsEnterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SlotsEnterResponse) ProtoMessage() {}

func (x *SlotsEnterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_slots_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SlotsEnterResponse.ProtoReflect.Descriptor instead.
func (*SlotsEnterResponse) Descriptor() ([]byte, []int) {
	return file_slots_proto_rawDescGZIP(), []int{1}
}

func (x *SlotsEnterResponse) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *SlotsEnterResponse) GetNodeTree() *LiteNodeTree {
	if x != nil {
		return x.NodeTree
	}
	return nil
}

func (x *SlotsEnterResponse) GetCoin() int64 {
	if x != nil {
		return x.Coin
	}
	return 0
}

func (x *SlotsEnterResponse) GetBetIndex() int64 {
	if x != nil {
		return x.BetIndex
	}
	return 0
}

func (x *SlotsEnterResponse) GetCoinValueIndex() int64 {
	if x != nil {
		return x.CoinValueIndex
	}
	return 0
}

type SlotsPlayRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Theme          string `protobuf:"bytes,1,opt,name=Theme,proto3" json:"Theme,omitempty"`
	BetIndex       int64  `protobuf:"varint,2,opt,name=BetIndex,proto3" json:"BetIndex,omitempty"`
	CoinValueIndex int64  `protobuf:"varint,3,opt,name=CoinValueIndex,proto3" json:"CoinValueIndex,omitempty"`
	Choice         int64  `protobuf:"varint,4,opt,name=Choice,proto3" json:"Choice,omitempty"`
	PropID         string `protobuf:"bytes,5,opt,name=PropID,proto3" json:"PropID,omitempty"`
}

func (x *SlotsPlayRequest) Reset() {
	*x = SlotsPlayRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_slots_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SlotsPlayRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SlotsPlayRequest) ProtoMessage() {}

func (x *SlotsPlayRequest) ProtoReflect() protoreflect.Message {
	mi := &file_slots_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SlotsPlayRequest.ProtoReflect.Descriptor instead.
func (*SlotsPlayRequest) Descriptor() ([]byte, []int) {
	return file_slots_proto_rawDescGZIP(), []int{2}
}

func (x *SlotsPlayRequest) GetTheme() string {
	if x != nil {
		return x.Theme
	}
	return ""
}

func (x *SlotsPlayRequest) GetBetIndex() int64 {
	if x != nil {
		return x.BetIndex
	}
	return 0
}

func (x *SlotsPlayRequest) GetCoinValueIndex() int64 {
	if x != nil {
		return x.CoinValueIndex
	}
	return 0
}

func (x *SlotsPlayRequest) GetChoice() int64 {
	if x != nil {
		return x.Choice
	}
	return 0
}

func (x *SlotsPlayRequest) GetPropID() string {
	if x != nil {
		return x.PropID
	}
	return ""
}

type SlotsPlayResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"Code"
	Code                 int64         `protobuf:"varint,1,opt,name=Code,proto3" json:"Code,omitempty"`
	NodeTree             *LiteNodeTree `protobuf:"bytes,2,opt,name=NodeTree,proto3" json:"NodeTree,omitempty"`
	ActualBet            int64         `protobuf:"varint,3,opt,name=ActualBet,proto3" json:"ActualBet,omitempty"`
	ActualWin            int64         `protobuf:"varint,4,opt,name=ActualWin,proto3" json:"ActualWin,omitempty"`
	Coin                 int64         `protobuf:"varint,5,opt,name=Coin,proto3" json:"Coin,omitempty"`
	PropMulti            int64         `protobuf:"varint,6,opt,name=PropMulti,proto3" json:"PropMulti,omitempty"`                      // 道具加成倍数
	SettleAdderOrderID   string        `protobuf:"bytes,7,opt,name=SettleAdderOrderID,proto3" json:"SettleAdderOrderID,omitempty"`     // 加倍结算订单ID
	SettleAdderProductID string        `protobuf:"bytes,8,opt,name=SettleAdderProductID,proto3" json:"SettleAdderProductID,omitempty"` // 加倍结算计费点ID
	SettleAdderCount     int64         `protobuf:"varint,9,opt,name=SettleAdderCount,proto3" json:"SettleAdderCount,omitempty"`        // 加倍结算额外获得金币数
}

func (x *SlotsPlayResponse) Reset() {
	*x = SlotsPlayResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_slots_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SlotsPlayResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SlotsPlayResponse) ProtoMessage() {}

func (x *SlotsPlayResponse) ProtoReflect() protoreflect.Message {
	mi := &file_slots_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SlotsPlayResponse.ProtoReflect.Descriptor instead.
func (*SlotsPlayResponse) Descriptor() ([]byte, []int) {
	return file_slots_proto_rawDescGZIP(), []int{3}
}

func (x *SlotsPlayResponse) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *SlotsPlayResponse) GetNodeTree() *LiteNodeTree {
	if x != nil {
		return x.NodeTree
	}
	return nil
}

func (x *SlotsPlayResponse) GetActualBet() int64 {
	if x != nil {
		return x.ActualBet
	}
	return 0
}

func (x *SlotsPlayResponse) GetActualWin() int64 {
	if x != nil {
		return x.ActualWin
	}
	return 0
}

func (x *SlotsPlayResponse) GetCoin() int64 {
	if x != nil {
		return x.Coin
	}
	return 0
}

func (x *SlotsPlayResponse) GetPropMulti() int64 {
	if x != nil {
		return x.PropMulti
	}
	return 0
}

func (x *SlotsPlayResponse) GetSettleAdderOrderID() string {
	if x != nil {
		return x.SettleAdderOrderID
	}
	return ""
}

func (x *SlotsPlayResponse) GetSettleAdderProductID() string {
	if x != nil {
		return x.SettleAdderProductID
	}
	return ""
}

func (x *SlotsPlayResponse) GetSettleAdderCount() int64 {
	if x != nil {
		return x.SettleAdderCount
	}
	return 0
}

type SlotsLeaveRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Theme string `protobuf:"bytes,1,opt,name=Theme,proto3" json:"Theme,omitempty"`
}

func (x *SlotsLeaveRequest) Reset() {
	*x = SlotsLeaveRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_slots_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SlotsLeaveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SlotsLeaveRequest) ProtoMessage() {}

func (x *SlotsLeaveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_slots_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SlotsLeaveRequest.ProtoReflect.Descriptor instead.
func (*SlotsLeaveRequest) Descriptor() ([]byte, []int) {
	return file_slots_proto_rawDescGZIP(), []int{4}
}

func (x *SlotsLeaveRequest) GetTheme() string {
	if x != nil {
		return x.Theme
	}
	return ""
}

type SlotsLeaveResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"Code"
	Code int64 `protobuf:"varint,1,opt,name=Code,proto3" json:"Code,omitempty"`
	Coin int64 `protobuf:"varint,2,opt,name=Coin,proto3" json:"Coin,omitempty"`
}

func (x *SlotsLeaveResponse) Reset() {
	*x = SlotsLeaveResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_slots_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SlotsLeaveResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SlotsLeaveResponse) ProtoMessage() {}

func (x *SlotsLeaveResponse) ProtoReflect() protoreflect.Message {
	mi := &file_slots_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SlotsLeaveResponse.ProtoReflect.Descriptor instead.
func (*SlotsLeaveResponse) Descriptor() ([]byte, []int) {
	return file_slots_proto_rawDescGZIP(), []int{5}
}

func (x *SlotsLeaveResponse) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *SlotsLeaveResponse) GetCoin() int64 {
	if x != nil {
		return x.Coin
	}
	return 0
}

type LiteNodeTree struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Step       int64            `protobuf:"varint,1,opt,name=Step,proto3" json:"Step,omitempty"`
	Cursor     int64            `protobuf:"varint,2,opt,name=Cursor,proto3" json:"Cursor,omitempty"`
	Next       int64            `protobuf:"varint,3,opt,name=Next,proto3" json:"Next,omitempty"`
	Closing    []int64          `protobuf:"varint,4,rep,packed,name=Closing,proto3" json:"Closing,omitempty"`
	Nodes      []*LiteNode      `protobuf:"bytes,5,rep,name=Nodes,proto3" json:"Nodes,omitempty"`
	Formations []*LiteFormation `protobuf:"bytes,6,rep,name=Formations,proto3" json:"Formations,omitempty"`
	Features   []*LiteFeature   `protobuf:"bytes,7,rep,name=Features,proto3" json:"Features,omitempty"`
}

func (x *LiteNodeTree) Reset() {
	*x = LiteNodeTree{}
	if protoimpl.UnsafeEnabled {
		mi := &file_slots_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LiteNodeTree) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LiteNodeTree) ProtoMessage() {}

func (x *LiteNodeTree) ProtoReflect() protoreflect.Message {
	mi := &file_slots_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LiteNodeTree.ProtoReflect.Descriptor instead.
func (*LiteNodeTree) Descriptor() ([]byte, []int) {
	return file_slots_proto_rawDescGZIP(), []int{6}
}

func (x *LiteNodeTree) GetStep() int64 {
	if x != nil {
		return x.Step
	}
	return 0
}

func (x *LiteNodeTree) GetCursor() int64 {
	if x != nil {
		return x.Cursor
	}
	return 0
}

func (x *LiteNodeTree) GetNext() int64 {
	if x != nil {
		return x.Next
	}
	return 0
}

func (x *LiteNodeTree) GetClosing() []int64 {
	if x != nil {
		return x.Closing
	}
	return nil
}

func (x *LiteNodeTree) GetNodes() []*LiteNode {
	if x != nil {
		return x.Nodes
	}
	return nil
}

func (x *LiteNodeTree) GetFormations() []*LiteFormation {
	if x != nil {
		return x.Formations
	}
	return nil
}

func (x *LiteNodeTree) GetFeatures() []*LiteFeature {
	if x != nil {
		return x.Features
	}
	return nil
}

type LiteNode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID               int64   `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Parent           int64   `protobuf:"varint,2,opt,name=Parent,proto3" json:"Parent,omitempty"`
	Children         []int64 `protobuf:"varint,3,rep,packed,name=Children,proto3" json:"Children,omitempty"`
	Type             string  `protobuf:"bytes,4,opt,name=Type,proto3" json:"Type,omitempty"`
	SpinType         int64   `protobuf:"varint,5,opt,name=SpinType,proto3" json:"SpinType,omitempty"`
	Win              int64   `protobuf:"varint,6,opt,name=Win,proto3" json:"Win,omitempty"`
	TotalWin         int64   `protobuf:"varint,7,opt,name=TotalWin,proto3" json:"TotalWin,omitempty"`
	ChildrenTotalWin int64   `protobuf:"varint,8,opt,name=ChildrenTotalWin,proto3" json:"ChildrenTotalWin,omitempty"`
	ProgressValue    int64   `protobuf:"varint,9,opt,name=ProgressValue,proto3" json:"ProgressValue,omitempty"`
	ProgressMax      int64   `protobuf:"varint,10,opt,name=ProgressMax,proto3" json:"ProgressMax,omitempty"`
	Bet              int64   `protobuf:"varint,11,opt,name=Bet,proto3" json:"Bet,omitempty"`
}

func (x *LiteNode) Reset() {
	*x = LiteNode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_slots_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LiteNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LiteNode) ProtoMessage() {}

func (x *LiteNode) ProtoReflect() protoreflect.Message {
	mi := &file_slots_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LiteNode.ProtoReflect.Descriptor instead.
func (*LiteNode) Descriptor() ([]byte, []int) {
	return file_slots_proto_rawDescGZIP(), []int{7}
}

func (x *LiteNode) GetID() int64 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *LiteNode) GetParent() int64 {
	if x != nil {
		return x.Parent
	}
	return 0
}

func (x *LiteNode) GetChildren() []int64 {
	if x != nil {
		return x.Children
	}
	return nil
}

func (x *LiteNode) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *LiteNode) GetSpinType() int64 {
	if x != nil {
		return x.SpinType
	}
	return 0
}

func (x *LiteNode) GetWin() int64 {
	if x != nil {
		return x.Win
	}
	return 0
}

func (x *LiteNode) GetTotalWin() int64 {
	if x != nil {
		return x.TotalWin
	}
	return 0
}

func (x *LiteNode) GetChildrenTotalWin() int64 {
	if x != nil {
		return x.ChildrenTotalWin
	}
	return 0
}

func (x *LiteNode) GetProgressValue() int64 {
	if x != nil {
		return x.ProgressValue
	}
	return 0
}

func (x *LiteNode) GetProgressMax() int64 {
	if x != nil {
		return x.ProgressMax
	}
	return 0
}

func (x *LiteNode) GetBet() int64 {
	if x != nil {
		return x.Bet
	}
	return 0
}

type LiteFormation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID             int64            `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	SpinType       int64            `protobuf:"varint,2,opt,name=SpinType,proto3" json:"SpinType,omitempty"`
	NodeID         int64            `protobuf:"varint,3,opt,name=NodeID,proto3" json:"NodeID,omitempty"`
	InitSymbols    []int64          `protobuf:"varint,4,rep,packed,name=InitSymbols,proto3" json:"InitSymbols,omitempty"`
	DisplaySymbols []int64          `protobuf:"varint,5,rep,packed,name=DisplaySymbols,proto3" json:"DisplaySymbols,omitempty"`
	FinalSymbols   []int64          `protobuf:"varint,6,rep,packed,name=FinalSymbols,proto3" json:"FinalSymbols,omitempty"`
	LinkPositions  []*LinkPositions `protobuf:"bytes,7,rep,name=LinkPositions,proto3" json:"LinkPositions,omitempty"`
	Win            int64            `protobuf:"varint,8,opt,name=Win,proto3" json:"Win,omitempty"`
	RandPositions  []int64          `protobuf:"varint,9,rep,packed,name=RandPositions,proto3" json:"RandPositions,omitempty"`
}

func (x *LiteFormation) Reset() {
	*x = LiteFormation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_slots_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LiteFormation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LiteFormation) ProtoMessage() {}

func (x *LiteFormation) ProtoReflect() protoreflect.Message {
	mi := &file_slots_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LiteFormation.ProtoReflect.Descriptor instead.
func (*LiteFormation) Descriptor() ([]byte, []int) {
	return file_slots_proto_rawDescGZIP(), []int{8}
}

func (x *LiteFormation) GetID() int64 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *LiteFormation) GetSpinType() int64 {
	if x != nil {
		return x.SpinType
	}
	return 0
}

func (x *LiteFormation) GetNodeID() int64 {
	if x != nil {
		return x.NodeID
	}
	return 0
}

func (x *LiteFormation) GetInitSymbols() []int64 {
	if x != nil {
		return x.InitSymbols
	}
	return nil
}

func (x *LiteFormation) GetDisplaySymbols() []int64 {
	if x != nil {
		return x.DisplaySymbols
	}
	return nil
}

func (x *LiteFormation) GetFinalSymbols() []int64 {
	if x != nil {
		return x.FinalSymbols
	}
	return nil
}

func (x *LiteFormation) GetLinkPositions() []*LinkPositions {
	if x != nil {
		return x.LinkPositions
	}
	return nil
}

func (x *LiteFormation) GetWin() int64 {
	if x != nil {
		return x.Win
	}
	return 0
}

func (x *LiteFormation) GetRandPositions() []int64 {
	if x != nil {
		return x.RandPositions
	}
	return nil
}

type LiteFeature struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeID      int64  `protobuf:"varint,1,opt,name=NodeID,proto3" json:"NodeID,omitempty"`
	FormationID int64  `protobuf:"varint,2,opt,name=FormationID,proto3" json:"FormationID,omitempty"`
	Type        string `protobuf:"bytes,3,opt,name=Type,proto3" json:"Type,omitempty"`
	Custom      string `protobuf:"bytes,4,opt,name=Custom,proto3" json:"Custom,omitempty"`
	Win         int64  `protobuf:"varint,5,opt,name=Win,proto3" json:"Win,omitempty"`
}

func (x *LiteFeature) Reset() {
	*x = LiteFeature{}
	if protoimpl.UnsafeEnabled {
		mi := &file_slots_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LiteFeature) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LiteFeature) ProtoMessage() {}

func (x *LiteFeature) ProtoReflect() protoreflect.Message {
	mi := &file_slots_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LiteFeature.ProtoReflect.Descriptor instead.
func (*LiteFeature) Descriptor() ([]byte, []int) {
	return file_slots_proto_rawDescGZIP(), []int{9}
}

func (x *LiteFeature) GetNodeID() int64 {
	if x != nil {
		return x.NodeID
	}
	return 0
}

func (x *LiteFeature) GetFormationID() int64 {
	if x != nil {
		return x.FormationID
	}
	return 0
}

func (x *LiteFeature) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *LiteFeature) GetCustom() string {
	if x != nil {
		return x.Custom
	}
	return ""
}

func (x *LiteFeature) GetWin() int64 {
	if x != nil {
		return x.Win
	}
	return 0
}

type LinkPositions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Indexes for Items that are linked
	// @inject_tag: json:"Positions"
	Positions []int64 `protobuf:"varint,1,rep,packed,name=Positions,proto3" json:"Positions,omitempty"`
}

func (x *LinkPositions) Reset() {
	*x = LinkPositions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_slots_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LinkPositions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LinkPositions) ProtoMessage() {}

func (x *LinkPositions) ProtoReflect() protoreflect.Message {
	mi := &file_slots_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LinkPositions.ProtoReflect.Descriptor instead.
func (*LinkPositions) Descriptor() ([]byte, []int) {
	return file_slots_proto_rawDescGZIP(), []int{10}
}

func (x *LinkPositions) GetPositions() []int64 {
	if x != nil {
		return x.Positions
	}
	return nil
}

var File_slots_proto protoreflect.FileDescriptor

var file_slots_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x73, 0x6c, 0x6f, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x03, 0x63,
	0x6c, 0x69, 0x22, 0x51, 0x0a, 0x11, 0x53, 0x6c, 0x6f, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x55, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x55, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12,
	0x14, 0x0a, 0x05, 0x54, 0x68, 0x65, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x54, 0x68, 0x65, 0x6d, 0x65, 0x22, 0xaf, 0x01, 0x0a, 0x12, 0x53, 0x6c, 0x6f, 0x74, 0x73, 0x45,
	0x6e, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x2d, 0x0a, 0x08, 0x4e, 0x6f, 0x64, 0x65, 0x54, 0x72, 0x65, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6c, 0x69, 0x2e, 0x4c, 0x69, 0x74, 0x65, 0x4e, 0x6f, 0x64,
	0x65, 0x54, 0x72, 0x65, 0x65, 0x52, 0x08, 0x4e, 0x6f, 0x64, 0x65, 0x54, 0x72, 0x65, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x43, 0x6f, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x43,
	0x6f, 0x69, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x42, 0x65, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x42, 0x65, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12,
	0x26, 0x0a, 0x0e, 0x43, 0x6f, 0x69, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x43, 0x6f, 0x69, 0x6e, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x22, 0x9c, 0x01, 0x0a, 0x10, 0x53, 0x6c, 0x6f, 0x74,
	0x73, 0x50, 0x6c, 0x61, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x54, 0x68, 0x65, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x54, 0x68, 0x65,
	0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x42, 0x65, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x42, 0x65, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x26,
	0x0a, 0x0e, 0x43, 0x6f, 0x69, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x43, 0x6f, 0x69, 0x6e, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x16, 0x0a, 0x06, 0x43, 0x68, 0x6f, 0x69, 0x63, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x43, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x50, 0x72, 0x6f, 0x70, 0x49, 0x44, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x50, 0x72, 0x6f, 0x70, 0x49, 0x44, 0x22, 0xd4, 0x02, 0x0a, 0x11, 0x53, 0x6c, 0x6f, 0x74, 0x73,
	0x50, 0x6c, 0x61, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x2d, 0x0a, 0x08, 0x4e, 0x6f, 0x64, 0x65, 0x54, 0x72, 0x65, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6c, 0x69, 0x2e, 0x4c, 0x69, 0x74, 0x65, 0x4e, 0x6f, 0x64,
	0x65, 0x54, 0x72, 0x65, 0x65, 0x52, 0x08, 0x4e, 0x6f, 0x64, 0x65, 0x54, 0x72, 0x65, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x41, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x42, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x41, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x42, 0x65, 0x74, 0x12, 0x1c, 0x0a,
	0x09, 0x41, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x57, 0x69, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x41, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x57, 0x69, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x43,
	0x6f, 0x69, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x43, 0x6f, 0x69, 0x6e, 0x12,
	0x1c, 0x0a, 0x09, 0x50, 0x72, 0x6f, 0x70, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x50, 0x72, 0x6f, 0x70, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x12, 0x2e, 0x0a,
	0x12, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x41, 0x64, 0x64, 0x65, 0x72, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x49, 0x44, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x53, 0x65, 0x74, 0x74, 0x6c,
	0x65, 0x41, 0x64, 0x64, 0x65, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x44, 0x12, 0x32, 0x0a,
	0x14, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x41, 0x64, 0x64, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x49, 0x44, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x53, 0x65, 0x74,
	0x74, 0x6c, 0x65, 0x41, 0x64, 0x64, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49,
	0x44, 0x12, 0x2a, 0x0a, 0x10, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x41, 0x64, 0x64, 0x65, 0x72,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x53, 0x65, 0x74,
	0x74, 0x6c, 0x65, 0x41, 0x64, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x29, 0x0a,
	0x11, 0x53, 0x6c, 0x6f, 0x74, 0x73, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x68, 0x65, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x54, 0x68, 0x65, 0x6d, 0x65, 0x22, 0x3c, 0x0a, 0x12, 0x53, 0x6c, 0x6f, 0x74,
	0x73, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x43, 0x6f, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x04, 0x43, 0x6f, 0x69, 0x6e, 0x22, 0xef, 0x01, 0x0a, 0x0c, 0x4c, 0x69, 0x74, 0x65, 0x4e,
	0x6f, 0x64, 0x65, 0x54, 0x72, 0x65, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x53, 0x74, 0x65, 0x70, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x53, 0x74, 0x65, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x43,
	0x75, 0x72, 0x73, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x43, 0x75, 0x72,
	0x73, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x65, 0x78, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x04, 0x4e, 0x65, 0x78, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6c, 0x6f, 0x73, 0x69,
	0x6e, 0x67, 0x18, 0x04, 0x20, 0x03, 0x28, 0x03, 0x52, 0x07, 0x43, 0x6c, 0x6f, 0x73, 0x69, 0x6e,
	0x67, 0x12, 0x23, 0x0a, 0x05, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0d, 0x2e, 0x63, 0x6c, 0x69, 0x2e, 0x4c, 0x69, 0x74, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x52,
	0x05, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x32, 0x0a, 0x0a, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63, 0x6c, 0x69,
	0x2e, 0x4c, 0x69, 0x74, 0x65, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a,
	0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x2c, 0x0a, 0x08, 0x46, 0x65,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63,
	0x6c, 0x69, 0x2e, 0x4c, 0x69, 0x74, 0x65, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x08,
	0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x22, 0xb2, 0x02, 0x0a, 0x08, 0x4c, 0x69, 0x74,
	0x65, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a,
	0x08, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x03, 0x28, 0x03, 0x52,
	0x08, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x53, 0x70, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x53, 0x70, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x57, 0x69, 0x6e,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x57, 0x69, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x54,
	0x6f, 0x74, 0x61, 0x6c, 0x57, 0x69, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x54,
	0x6f, 0x74, 0x61, 0x6c, 0x57, 0x69, 0x6e, 0x12, 0x2a, 0x0a, 0x10, 0x43, 0x68, 0x69, 0x6c, 0x64,
	0x72, 0x65, 0x6e, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x57, 0x69, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x10, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x54, 0x6f, 0x74, 0x61, 0x6c,
	0x57, 0x69, 0x6e, 0x12, 0x24, 0x0a, 0x0d, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x50, 0x72, 0x6f, 0x67,
	0x72, 0x65, 0x73, 0x73, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x50, 0x72, 0x6f,
	0x67, 0x72, 0x65, 0x73, 0x73, 0x4d, 0x61, 0x78, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b,
	0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x4d, 0x61, 0x78, 0x12, 0x10, 0x0a, 0x03, 0x42,
	0x65, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x42, 0x65, 0x74, 0x22, 0xb3, 0x02,
	0x0a, 0x0d, 0x4c, 0x69, 0x74, 0x65, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x44, 0x12,
	0x1a, 0x0a, 0x08, 0x53, 0x70, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x53, 0x70, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x4e,
	0x6f, 0x64, 0x65, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x4e, 0x6f, 0x64,
	0x65, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x49, 0x6e, 0x69, 0x74, 0x53, 0x79, 0x6d, 0x62, 0x6f,
	0x6c, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x03, 0x52, 0x0b, 0x49, 0x6e, 0x69, 0x74, 0x53, 0x79,
	0x6d, 0x62, 0x6f, 0x6c, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79,
	0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x03, 0x52, 0x0e, 0x44,
	0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x73, 0x12, 0x22, 0x0a,
	0x0c, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x73, 0x18, 0x06, 0x20,
	0x03, 0x28, 0x03, 0x52, 0x0c, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c,
	0x73, 0x12, 0x38, 0x0a, 0x0d, 0x4c, 0x69, 0x6e, 0x6b, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63, 0x6c, 0x69, 0x2e, 0x4c,
	0x69, 0x6e, 0x6b, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x0d, 0x4c, 0x69,
	0x6e, 0x6b, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x57,
	0x69, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x57, 0x69, 0x6e, 0x12, 0x24, 0x0a,
	0x0d, 0x52, 0x61, 0x6e, 0x64, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x09,
	0x20, 0x03, 0x28, 0x03, 0x52, 0x0d, 0x52, 0x61, 0x6e, 0x64, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x22, 0x85, 0x01, 0x0a, 0x0b, 0x4c, 0x69, 0x74, 0x65, 0x46, 0x65, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x46,
	0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0b, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x12, 0x0a,
	0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x12, 0x10, 0x0a, 0x03, 0x57, 0x69, 0x6e,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x57, 0x69, 0x6e, 0x22, 0x2d, 0x0a, 0x0d, 0x4c,
	0x69, 0x6e, 0x6b, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1c, 0x0a, 0x09,
	0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52,
	0x09, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x08, 0x5a, 0x06, 0x70, 0x62,
	0x2f, 0x63, 0x6c, 0x69, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_slots_proto_rawDescOnce sync.Once
	file_slots_proto_rawDescData = file_slots_proto_rawDesc
)

func file_slots_proto_rawDescGZIP() []byte {
	file_slots_proto_rawDescOnce.Do(func() {
		file_slots_proto_rawDescData = protoimpl.X.CompressGZIP(file_slots_proto_rawDescData)
	})
	return file_slots_proto_rawDescData
}

var file_slots_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_slots_proto_goTypes = []interface{}{
	(*SlotsEnterRequest)(nil),  // 0: cli.SlotsEnterRequest
	(*SlotsEnterResponse)(nil), // 1: cli.SlotsEnterResponse
	(*SlotsPlayRequest)(nil),   // 2: cli.SlotsPlayRequest
	(*SlotsPlayResponse)(nil),  // 3: cli.SlotsPlayResponse
	(*SlotsLeaveRequest)(nil),  // 4: cli.SlotsLeaveRequest
	(*SlotsLeaveResponse)(nil), // 5: cli.SlotsLeaveResponse
	(*LiteNodeTree)(nil),       // 6: cli.LiteNodeTree
	(*LiteNode)(nil),           // 7: cli.LiteNode
	(*LiteFormation)(nil),      // 8: cli.LiteFormation
	(*LiteFeature)(nil),        // 9: cli.LiteFeature
	(*LinkPositions)(nil),      // 10: cli.LinkPositions
}
var file_slots_proto_depIdxs = []int32{
	6,  // 0: cli.SlotsEnterResponse.NodeTree:type_name -> cli.LiteNodeTree
	6,  // 1: cli.SlotsPlayResponse.NodeTree:type_name -> cli.LiteNodeTree
	7,  // 2: cli.LiteNodeTree.Nodes:type_name -> cli.LiteNode
	8,  // 3: cli.LiteNodeTree.Formations:type_name -> cli.LiteFormation
	9,  // 4: cli.LiteNodeTree.Features:type_name -> cli.LiteFeature
	10, // 5: cli.LiteFormation.LinkPositions:type_name -> cli.LinkPositions
	6,  // [6:6] is the sub-list for method output_type
	6,  // [6:6] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_slots_proto_init() }
func file_slots_proto_init() {
	if File_slots_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_slots_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SlotsEnterRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_slots_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SlotsEnterResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_slots_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SlotsPlayRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_slots_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SlotsPlayResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_slots_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SlotsLeaveRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_slots_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SlotsLeaveResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_slots_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LiteNodeTree); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_slots_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LiteNode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_slots_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LiteFormation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_slots_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LiteFeature); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_slots_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LinkPositions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_slots_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_slots_proto_goTypes,
		DependencyIndexes: file_slots_proto_depIdxs,
		MessageInfos:      file_slots_proto_msgTypes,
	}.Build()
	File_slots_proto = out.File
	file_slots_proto_rawDesc = nil
	file_slots_proto_goTypes = nil
	file_slots_proto_depIdxs = nil
}
